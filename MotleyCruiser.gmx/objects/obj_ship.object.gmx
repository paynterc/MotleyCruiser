<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
saved_speed = noone;

faction = noone; //FACTION_PIRATE, FACTION_TRADER

turn_spd = 2;
max_spd = 5;
max_spd_fwd = 5;
max_spd_rvs = 3;
acc_spd_fwd = 0.2;//acceleration speed forward
acc_spd_rvs = 0.2;//acceleration speed reverse

// Ship state
disabled = false;
can_move = true;
can_fire = true;


shields = 100;
shields_current = shields;
shields_regen_speed = 3;//frequency of shield regen ticks.
shields_regen_points = 5;//shield regenerated on each tick.

hull = 50;
hull_current = hull;

energy = 500;
energy_current = energy;
energy_regen_speed = 1;//frequency of energy regen ticks.
energy_regen_points = 5;//energy regenerated on each tick.

weapon_speed = 0.1;//multiplied by 1 second or room_speed
weapon_range = 400;
shooting = false;
target = noone;

shieldSizeMod = (sprite_width/sprite_get_width(spr_shield)) + 0.5;

// Start alarms
alarm[0] = room_speed * weapon_speed;
alarm[1] = room_speed * energy_regen_speed;
alarm[2] = room_speed * shields_regen_speed;

image_speed=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Regen some shields
shields_current += shields_regen_points;
if(shields_current&gt;shields){
    shields_current = shields;
}
if(shields_current&lt;0){
    shields_current = 0;
}
alarm[2] = room_speed * shields_regen_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Regen some energy
energy_current += energy_regen_points;
if(energy_current&gt;energy){
    energy_current = energy;
}
if(energy_current&lt;0){
    energy_current = 0;
}
alarm[1] = room_speed * energy_regen_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Shoot a bullet
if(shooting &amp;&amp; energy_current&gt;0 &amp;&amp; !global.paused){
    bullet = instance_create(x,y,obj_laser);
    bullet.type=faction;
    bullet.depth = -200;
    bullet.direction = image_angle;
    bullet.image_angle = image_angle;
    bullet.speed = 10;
    //audio_play_sound(snd_pulse1,1,false);
    audio_play_sound_at(snd_laser3,x,y,0,100,100,1,false,2);
    energy_current -= 2;
    if(energy_current &lt; 0){
        energy_current = 0;
    }

}

alarm[0] = room_speed * weapon_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Auto deceleration
//Step events are fired every frame.
//max() chooses the largest of all the comma-separated values.
if(global.paused){
    exit;
}
speed = max(speed - 0.01, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_ship">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Bounce
var pdir;
pdir = point_direction(other.x, other.y, x, y);
motion_add(pdir, other.speed);
if speed &gt; 5 speed = 5;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_damager">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(other.type != faction){
    if(shields_current&gt;0){
        shields_current -= other.damage;
    }else if(hull_current&gt;0){
        hull_current -= other.damage;
        
        if(!disabled){
            var dchance = round( (hull_current/hull) * 100 );
            if(irandom(dchance)==dchance){
                disabled = true;
                can_move = false;
                can_fire = false;
            }
        }

        
        
        
    }else{
        instance_create(x,y,obj_explosion);
        instance_deactivate_object(self);
    }
    
    with(other){  
        instance_destroy();
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw shields
draw_self()
draw_sprite_ext( spr_shield, 0, x, y, shieldSizeMod, shieldSizeMod, image_angle, c_aqua, shields_current/shields );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
