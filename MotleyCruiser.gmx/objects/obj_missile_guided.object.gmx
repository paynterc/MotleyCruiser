<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_damager</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
// BULLETS HAVE type, not faction, but they are the same thing.
saved_speed = noone;
can_move = true;
target = noone;
tgt_dist = 0;
image_speed=0;
facingMinusTarget = 100;
angleDiff = 100;
turn_spd = 7;
acc_spd_fwd = 3;//acceleration speed forward
alarm[0]=room_speed * .25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update target and Disposition
// consider three attributes: FACTION, DISPOSITION and MODE.
inView = scr_instance_in_view(id);
if( inView ){    
    var s_count = instance_number(obj_ship);
    var cdist = noone;
    var closest = noone;
    for(var i = 0; i &lt; s_count; i++) {
        var s_ship = instance_find(obj_ship,i);
        if(scr_instance_in_view(s_ship) &amp;&amp; s_ship.faction != type){ // damagers use type instead of faction
            var pdist = point_distance(s_ship.x,s_ship.y,x,y);
            if(cdist==noone || pdist&lt;cdist){
                closest = s_ship;
                cdist = pdist;
            }
        }
    }
    
    if(closest != noone){
        target = closest;
        tgt_dist = distance_to_object(target);
    }
}
alarm[0]=room_speed * .25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Turn and move
if(global.paused){
    if(speed != 0){
        saved_speed = speed;
        speed = 0;
    }
    exit;
}else{
    if(saved_speed != noone){
        speed = saved_speed;
        saved_speed = noone;
    } 
}

if(target != noone){
    angleDiff = scr_gradually_rotate_5(id,target.x,target.y,turn_spd);
}

motion_add(image_angle,acc_spd_fwd);
if(speed &gt; max_spd_fwd){
    speed = max_spd_fwd;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="40">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
