<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_default</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_mortal</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize enemy
type = 2;//enemy
depth = -y;

path = path_add();
target = noone;

//hunt, defend, hold
mode = "hunt";

hp=10;
hp_current=hp;
pspeed = 2;
pspeed_init = pspeed;
image_speed = .25;

sprite_default = spr_default;
sprite_index = sprite_default;
health_y = sprite_get_height(sprite_index) + 5;
hyset = false;

weapon_index = noone;
weapon=noone;
race_index = noone;
sex = noone;
bullet_width=1; // Use this to add to range. Useful for melee weapons with short range but big bullets.

alarm[0] = room_speed * .5;// Move and shoot
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cleanup
if(weapon != noone){
    weapon.shooting = false;
    weapon.destroy = true;
}
if(path_exists(path)) {
    path_delete(path);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move &amp; Shoot

// "defend" continues all the way to core unless encounters player
// "hold" holds position then falls back to core when target gets near
// "hunt" finds closest player team member and moves to it
if(!global.paused){

    if(mode!="hunt" &amp;&amp; hp_current&lt;hp){
        mode = "hunt";
    }
    
    var inview = scr_instance_in_view(self);
    
    
    /***
    Find closest member of the player's boarding team. This includes the player.
    ***/
    if(instance_exists(obj_team)){
        
        target = instance_nearest(x,y,obj_team);
        var px = (target.x div CELL_WIDTH)* CELL_WIDTH + CELL_WIDTH/2;
        var py = (target.y div CELL_HEIGHT)* CELL_HEIGHT + CELL_HEIGHT/2;
        var pd = distance_to_object(target);
    
    }else{
        target = noone;
    }
    
    if( target!=noone &amp;&amp; instance_exists(target) ){
    
        
        
        if(instance_exists(obj_core) &amp;&amp; (mode=="defend" || mode=="hold")){
        
            var cx = (obj_core.x div CELL_WIDTH)* CELL_WIDTH + CELL_WIDTH/2;
            var cy = (obj_core.y div CELL_HEIGHT)* CELL_HEIGHT + CELL_HEIGHT/2;
            // Get path to core
            scr_get_path_to_point(cx,cy,pspeed);
            
            if(point_distance(x,y,cx,cy) &lt; 120){
                path_end();  
            }
            
            //point_distance(x,y,px,py)
            if(mode=="defend" &amp;&amp; pd &lt; 200){
                mode="hunt";
                //path_end();
            }else if(mode=="hold" &amp;&amp; pd &gt; 120){
                path_end();
            }
    
            if(weapon!=noone){
                if( inview &amp;&amp; weapon!=noone &amp;&amp; !scr_gridcol_line(weapon.x,weapon.y,target.x,target.y) &amp;&amp; pd&lt;=weapon.range + bullet_width ){
                    /// Start shooting
        
                    weapon.image_angle =  point_direction(x, y, px, py);
                    weapon.shooting = true;
        
                }else{
                        
                    weapon.image_angle =  direction;
                    weapon.shooting = false;
                
                }
            }
            
        }else if(mode == "hunt"){
            // Get path to player
            scr_get_path_to_point(px,py,pspeed);
            //path_get_number(path)&lt;5
            if(weapon!=noone){
                if( !scr_gridcol_line(weapon.x,weapon.y,target.x,target.y) &amp;&amp; inview &amp;&amp; pd&lt;=weapon.range + bullet_width){
                    path_end();
                    if(weapon!=noone){
                        weapon.image_angle =  point_direction(x, y, px, py);
                        weapon.shooting = true;
                    }      
                }else{
                    if(weapon!=noone){
                        weapon.image_angle =  direction;
                        weapon.shooting = false;
                    }
        
                }
            }
        
        }
        
        var verse = direction div 180;
        if( (verse == 0 &amp;&amp; image_xscale&lt;0) || (verse == 1 &amp;&amp; image_xscale&gt;0) ){
            image_xscale *= -1;
        }
    
        
        
    
        
    }

}

alarm[0] = room_speed * .5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check hp
depth = -y;

pspeed = pspeed_init * global.speed_mod;

/// Check hp_current
if(hp_current&lt;1){

    scr_drop_loot(1,3,'npc');

    corpse = instance_create(x,y,obj_corpse);
    corpse.sprite = sprite_index;
    
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Equip weapon. Update weapon position and angle
if(weapon==noone &amp;&amp; weapon_index!=noone){
    var weapon_list = scr_npc_weapons();
    var weapon_id = scr_array_random(weapon_list);
    weapon_index = scr_inv_item_read(weapon_id,6);// Slot 6 holds the object name
    if(weapon_index!=noone &amp;&amp; object_exists(weapon_index)){

        weapon = instance_create(x,y,weapon_index);
        weapon.weaponSpeed = max(.5, weapon.weaponSpeed * 2); // slow down fire rate for enemies. lower the number, the faster
        weapon.type = type;
        weapon.parent_obj = id;
        weapon.bullet_speed = max(round(weapon.bullet_speed/2),3);// Slow down bullets from enemy. higher the faster.
        bullet_width = sprite_get_width(weapon.bullet_sprite);
        
    }
}

if(weapon != noone){
    weapon.x = x;
    weapon.y = y;
    weapon.depth=depth -1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update sprite
if(sprite_index != sprite_default &amp;&amp; !hyset){
    health_y = sprite_get_height(sprite_index) - 5;
    hyset = true;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Pause
if(global.paused){
    path_end();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move away from other enemy
if(x == other.x &amp;&amp; y == other.y){
    scr_move(sign(other.id - id),0);
}

var dir = point_direction(other.x, other.y, x, y);
var hspd = lengthdir_x(.5,dir);
var vspd = lengthdir_y(.5,dir);
scr_move(hspd, vspd);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_damager">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(other.type!=type){

    var impact = instance_create(other.x,other.y,obj_impact);
    //impact.image_blend = c_red;
    hp_current -= other.damage;
    if(!other.pierce_living){
        with(other){
            instance_destroy();
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cleanup
if(path_exists(path)) {
    path_delete(path);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Healthbar
draw_self();
draw_healthbar(x-10,y-health_y,x+10,y-health_y, (hp_current/hp) * 100,c_black,c_red,c_green,0,false,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
