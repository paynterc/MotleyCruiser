<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init
scr_modules();

scaffold_size = 3;
center=noone;
grid_centers = noone;

var mx=x-(5*SCAFF_CELL_SIZE);
var my=y-(2*SCAFF_CELL_SIZE);

for(var m=0; m&lt;array_length_1d(global.module_library); m++){

    module_record = global.module_library[m];

    m_object = instance_create(mx, my ,obj_menu_module);  
    m_object.sprite_index = module_record[MODULE_SPRITE_INDEX];
    m_object.image_blend = module_record[MODULE_COLOR];
    m_object.module_data = module_record;
    m_object.image_angle = 90;
    m_object.start_x = m_object.x;
    m_object.start_y = m_object.y;
    m_object.depth = depth-1;
    mx+= SCAFF_CELL_SIZE + (SCAFF_CELL_SIZE/2);

}

grid_x= view_xview[0] - (view_wview[0]/4);
grid_y= view_yview[0] - ((view_hview[0]/6)*2);


for(var r=0;r&lt;scaffold_size;r++){
    for(var c=0;c&lt;scaffold_size;c++){
        var coords=noone;
        coords[0] = x +(SCAFF_CELL_SIZE * c) + (SCAFF_CELL_SIZE/2);
        coords[1] = y +(SCAFF_CELL_SIZE * r) + (SCAFF_CELL_SIZE/2);
        grid_centers[r,c]=coords;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Center view
view_xview[0]=x-(view_wview[0]/2);
view_yview[0]=y-(view_hview[0]/2);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update vars
if(center==noone){
    center = (scaffold_size-1)/2
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw scaffold
draw_set_color(c_lime); 
for(var r=0;r&lt;scaffold_size;r++){
    for(var c=0;c&lt;scaffold_size;c++){
        var x1 = x+(SCAFF_CELL_SIZE * c);
        var y1 = y+(SCAFF_CELL_SIZE * r);
        var x2 = x1+SCAFF_CELL_SIZE;
        var y2 = y1+SCAFF_CELL_SIZE;
       draw_rectangle(x1, y1, x2, y2, true);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
