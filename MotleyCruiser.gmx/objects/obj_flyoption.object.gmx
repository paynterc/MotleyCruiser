<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_flyoption</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init
drawgui = true;

depth = -100000;
index = 0;
destroy = false;
str = "";
option_target = noone;
option_index = noone;
myfont = fnt_messagebox;
init_xoffset = 0;
int_yoffset=0;
if(instance_exists(obj_flybox)){
    int_xoffset = x - obj_flybox.boxx1;
    int_yoffset = obj_flybox.boxy2 - y;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy or check mouse
if destroy {instance_destroy();}

if(drawgui){
    if mouse_check_button_pressed(mb_left) &amp;&amp; position_meeting(device_mouse_x_to_gui(0),device_mouse_y_to_gui(0),id)
    {
        if(option_index!=noone){
            option_target.fly_conditionals[option_index] = index;
        }
        if instance_exists(obj_flybox) {obj_flybox.state = "option_selected";}
    }
}else{
    if mouse_check_button_pressed(mb_left) &amp;&amp; position_meeting(mouse_x,mouse_y,id)
    {
        if(option_index!=noone){
            option_target.fly_conditionals[option_index] = index;
        }
        if instance_exists(obj_flybox) {obj_flybox.state = "option_selected";}
    }
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!drawgui) exit;
if(instance_exists(obj_flybox)){
    x = obj_flybox.boxx1 + int_xoffset;
    y  = obj_flybox.boxy2 - int_yoffset;
}

draw_self();
draw_set_halign(fa_center);
draw_set_valign(fa_center);
draw_set_font(myfont);
draw_set_color(c_white);

draw_text(x+sprite_width/2,y+sprite_height/2,str);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(drawgui) exit;
if(instance_exists(obj_flybox)){
    x = obj_flybox.boxx1 + int_xoffset;
    y  = obj_flybox.boxy2 - int_yoffset;
}

draw_self();
draw_set_halign(fa_center);
draw_set_valign(fa_center);
draw_set_font(myfont);
draw_set_color(c_white);

draw_text(x+sprite_width/2,y+sprite_height/2,str);

 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
