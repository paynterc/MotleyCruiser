<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create Mission Map
enum missionTypes{
killXofY,
deliverItem,
gatherXofY,
escort,
deliverPassenger,
killName,
speakToName,
deliverCargo
}


/***
To iterate
for (var k = ds_map_find_first(map); !is_undefined(k); k = ds_map_find_next(map, k)) {
  var v = map[? k];
}

Each mission will be a map. Use:
global.mission_id ++;
var missionKey = "m"+string(global.mission_id)
ds_map_add_map(global.mission_map, missionKey, newMap)
***/
global.mission_map = ds_map_create();


storyArc1 = 1;// Set this to 1 when you are ready to begin.


enum msnKillxy{
    mId,
    type,
    name,
    complete,
    npcText,
    description,
    stage,
    illegal,
    rewards,
    objectives,
    killType,
    killFaction,
    killedRequired,
    killedCurrent,
    sectorX,
    sectorY,
    returnToPlanet,
    returnToNPC
}

// deliverItemType: cargo or inventory
enum msnDeliverTo{
    mId,
    type,
    name,
    complete,
    text,
    descrip,
    stage,
    illegal,
    rewards,
    stage,
    objectives,
    sectorX,
    sectorY,
    deliverItem,
    deliverItemType,
    deliverItemQty,
    deliverToPlanet,
    deliverToNPC
}

enum msnSpeakToName{
    mId,
    type,
    name,
    complete,
    npcText,
    description,
    stage,
    illegal,
    rewards,
    objectives,
    sectorX,
    sectorY,
    location,
    npc
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Register events
scr_event_register(events.killedPirateShip, self, scr_mission_update_killxy);

// scr_event_fire(events.soldItem,item_id,amount)
scr_event_register(events.soldItem, self, scr_mission_update_deliver_cargo);

//landAtLocation
scr_event_register(events.landAtLocation, self, scr_mission_update_deliver_passenger);

scr_event_register(events.soldSlave, self, scr_ev_sold_slave);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cleanup
ds_map_destroy(global.mission_map);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
