<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-101</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
@@@IMPORTANT@@@ See object o_example_text for calling the script properly! @@@IMPORTANT@@@

To avoid some buggy-ness, refrain from having too many functions back to back, for example:

-What not to do: "Blah blah,&lt;100&gt;|snd_dex/&lt;100&gt;@Rblah blah...@
-What to do: "Blah blah,&lt;100&gt; |snd_dex/ &lt;100&gt; @Rblah blah...@

Avoiding back to back functions entirely is the best route to avoid bugs, and awkward spacing!

Objects, sprites, and sounds that are in folder groups labeled as REQUIRED means that they are
used throughout the system -- it is recommended to not delete them; changing what they contain 
is recommended!

Enjoy!

Got questions?
Hit me up on the GM Forums, my name is Vether.
Or email me at: vethera@outlook.com
*/

//Important Editable Variables 
//================================
//================================
//room_speed = 100;
depth = -200;//Draw depth
action_key = vk_space;// keyboard key used to navigate/close a text.
char_time = 2;//Text display speed -- 1 char / X steps (currently 1 char per 2 steps).
initial_col = c_white;//Default draw color

snd_text_output = noone; //Sound displaying text makes.
snd_next_message = noone; //Sound made when closing/switching texts.


speech_font = f_normal;//Font for "Speech" type texts
statement_font = f_normal;//Font for "Statement" type texts
story_font = f_normal;//Font for "Story type"

x_offset = 20;//x gap between the textbox x-origin-coordinate, and the text
y_offset = 15;//y gap between the textbox y-origin-coordinate, and the text

x_offset_speech = 135;//x gap between the textbox x-origin-coordinate, and the text -- when a portrait is visible
y_offset_speech = 15;//y gap between the textbox y-origin-coordinate, and the text -- when a portrait is visible
max_width = sprite_get_width(s_text_box) - 150; //Max length of each line of text
max_width_speech = sprite_get_width(s_text_box) - 210; //Max length of each line of text if there is a portrait
//================================
//================================
//Editing beyond here is not recommended without understanding of this object's Step and Draw Event code.

restartEngine = false;
FINAL_ACTIVE = false;
color_index = initial_col;
draw = false;
wait = 0;
count = 0;
count_alarm = 0;
count_value = char_time;
type = "";
skip = false;
final = false;
stop = false;
reset = false;

box_width = 0;
box_x = 0;
box_y = 0;
message_count = 1;
current_count = 1;
portrait_id = 0;
portrait_index = "";

insert_id = "";
insert_var = "";
insert_str = "";


instant_move = false;
move_box = false;
move_amount_x = 0;
move_amount_y = 0;
destination_x = 0;
destination_y = 0;
box_move_x = "";
box_move_y = "";
move_speed = "";

str_store1 = "";
str_store2 = "";
str_store3 = "";
str_store4 = "";
str_store5 = "";
str_store6 = "";
str_store7 = "";
str_store8 = "";
str_store9 = "";
str_store10 = "";
current_count_store = "";
portrait_index_store = "";
portrait_id_store = "";
message_count_store = "";
type_store = "";
creating_inst = noone;
creating_inst_store = noone;


//Conditionals
conditional = false;
conditional_input = "";
conditional_ID = noone;
conditional_number = 0;
conditional_flow = 0;

display_string = "";
str2 = "";
str3 = "";
str4 = "";
str5 = "";
str6 = "";
str7 = "";
str8 = "";
str9 = "";
str10 = "";

play_sound = false;
sound_index = noone;
shake_duration = "";
shake_magnitude = "";
shake = false;
shake_initial = false;
alarm_value_x = irandom_range(1,4);
alarm_value_y = irandom_range(1,4);
shake_ix = 0;
shake_iy = 0;
shake_alarm_x = 0;
shake_count_x = 0;
shake_alarm_y = 0;
shake_count_y = 0;
set_anchor = false;
anchor_x = 0;

icon_row = 0;
icon_x = 0;
icon_index = 0;

icon1draw = false;
icon2draw = false;
icon3draw = false;
icon4draw = false;
icon5draw = false;

icon1_anchor = 0;
icon2_anchor = 0;
icon3_anchor = 0;
icon4_anchor = 0;
icon5_anchor = 0;
icon1row = 0;
icon2row = 0;
icon3row = 0;
icon4row = 0;
icon5row = 0;

icon1y = 0;
icon2y = 0;
icon3y = 0;
icon4y = 0;
icon5y = 0;

icon1x = 0;
icon2x = 0;
icon3x = 0;
icon4x = 0;
icon5x = 0;

icon1index = 0;
icon2index = 0;
icon3index = 0;
icon4index = 0;
icon5index = 0;

blip_alarm = 0;
col_string = "";
col_active = false;

color1 = false;
color2 = false;
color3 = false;
color4 = false;
color5 = false;
color6 = false;
color1_draw = false;
color2_draw = false;
color3_draw = false;
color4_draw = false;
color5_draw = false;
color6_draw = false;
color1_index = c_black;
color2_index = c_black;
color3_index = c_black;
color4_index = c_black;
color5_index = c_black;
color6_index = c_black;

arrow = false;
arrow_initial_y = 0;
arrow_alarm = 0;
arrow_flow = 0;
arrow_draw_y = 0;

current_line = 0;
line0 = "";
line1 = "";
line2 = "";
line3 = "";
line4 = "";
line5 = "";
line6 = "";
line7 = "";
line8 = "";
line9 = "";
line10 = "";
line11 = "";
line12 = "";
line13 = "";
line14 = "";
line15 = "";

line0_col1 = "";
line1_col1 = "";
line2_col1 = "";
line3_col1 = "";
line4_col1 = "";
line5_col1 = "";
line6_col1 = "";
line7_col1 = "";
line8_col1 = "";
line9_col1 = "";
line10_col1 = "";
line11_col1 = "";
line12_col1 = "";
line13_col1 = "";
line14_col1 = "";
line15_col1 = "";

line0_col2 = "";
line1_col2 = "";
line2_col2 = "";
line3_col2 = "";
line4_col2 = "";
line5_col2 = "";
line6_col2 = "";
line7_col2 = "";
line8_col2 = "";
line9_col2 = "";
line10_col2 = "";
line11_col2 = "";
line12_col2 = "";
line13_col2 = "";
line14_col2 = "";
line15_col2 = "";

line0_col3 = "";
line1_col3 = "";
line2_col3 = "";
line3_col3 = "";
line4_col3 = "";
line5_col3 = "";
line6_col3 = "";
line7_col3 = "";
line8_col3 = "";
line9_col3 = "";
line10_col3 = "";
line11_col3 = "";
line12_col3 = "";
line13_col3 = "";
line14_col3 = "";
line15_col3 = "";

line0_col4 = "";
line1_col4 = "";
line2_col4 = "";
line3_col4 = "";
line4_col4 = "";
line5_col4 = "";
line6_col4 = "";
line7_col4 = "";
line8_col4 = "";
line9_col4 = "";
line10_col4 = "";
line11_col4 = "";
line12_col4 = "";
line13_col4 = "";
line14_col4 = "";
line15_col4 = "";

line0_col5 = "";
line1_col5 = "";
line2_col5 = "";
line3_col5 = "";
line4_col5 = "";
line5_col5 = "";
line6_col5 = "";
line7_col5 = "";
line8_col5 = "";
line9_col5 = "";
line10_col5 = "";
line11_col5 = "";
line12_col5 = "";
line13_col5 = "";
line14_col5 = "";
line15_col5 = "";

line0_col6 = "";
line1_col6 = "";
line2_col6 = "";
line3_col6 = "";
line4_col6 = "";
line5_col6 = "";
line6_col6 = "";
line7_col6 = "";
line8_col6 = "";
line9_col6 = "";
line10_col6 = "";
line11_col6 = "";
line12_col6 = "";
line13_col6 = "";
line14_col6 = "";
line15_col6 = "";

line0x = 0;
line1x = 0;
line2x = 0;
line3x = 0;
line4x = 0;
line5x = 0;
line6x = 0;
line7x = 0;
line8x = 0;
line9x = 0;
line10x = 0;
line11x = 0;
line12x = 0;
line13x = 0;
line14x = 0;
line15x = 0;













</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if restartEngine
{
restartEngine = false;
color_index = initial_col;
draw = false;
wait = 0;
count = 0;
count_alarm = 0;
count_value = char_time;
type = "";
skip = false;
final = false;
stop = false;
reset = false;
//max_width = 0;
box_width = 0;
box_x = 0;
box_y = 0;
message_count = 1;
current_count = 1;
portrait_id = 0;
portrait_index = "";

instant_move = false;
move_box = false;
move_amount_x = 0;
move_amount_y = 0;
destination_x = 0;
destination_y = 0;
box_move_x = "";
box_move_y = "";
move_speed = "";

display_string = "";
str2 = "";
str3 = "";
str4 = "";
str5 = "";
str6 = "";
str7 = "";
str8 = "";
str9 = "";
str10 = "";

play_sound = false;
sound_index = noone;
shake_duration = "";
shake_magnitude = "";
shake = false;
shake_initial = false;
alarm_value_x = irandom_range(1,4);
alarm_value_y = irandom_range(1,4);
shake_ix = 0;
shake_iy = 0;
shake_alarm_x = 0;
shake_count_x = 0;
shake_alarm_y = 0;
shake_count_y = 0;
set_anchor = false;
anchor_x = 0;

icon_row = 0;
icon_x = 0;
icon_index = 0;

icon1draw = false;
icon2draw = false;
icon3draw = false;
icon4draw = false;
icon5draw = false;

icon1_anchor = 0;
icon2_anchor = 0;
icon3_anchor = 0;
icon4_anchor = 0;
icon5_anchor = 0;
icon1row = 0;
icon2row = 0;
icon3row = 0;
icon4row = 0;
icon5row = 0;

icon1y = 0;
icon2y = 0;
icon3y = 0;
icon4y = 0;
icon5y = 0;

icon1x = 0;
icon2x = 0;
icon3x = 0;
icon4x = 0;
icon5x = 0;

icon1index = 0;
icon2index = 0;
icon3index = 0;
icon4index = 0;
icon5index = 0;

blip_alarm = 0;
col_string = "";
col_active = false;

color1 = false;
color2 = false;
color3 = false;
color4 = false;
color5 = false;
color6 = false;
color1_draw = false;
color2_draw = false;
color3_draw = false;
color4_draw = false;
color5_draw = false;
color6_draw = false;
color1_index = c_black;
color2_index = c_black;
color3_index = c_black;
color4_index = c_black;
color5_index = c_black;
color6_index = c_black;

arrow = false;
arrow_initial_y = 0;
arrow_alarm = 0;
arrow_flow = 0;
arrow_draw_y = 0;

current_line = 0;
line0 = "";
line1 = "";
line2 = "";
line3 = "";
line4 = "";
line5 = "";
line6 = "";
line7 = "";
line8 = "";
line9 = "";
line10 = "";
line11 = "";
line12 = "";
line13 = "";
line14 = "";
line15 = "";

line0_col1 = "";
line1_col1 = "";
line2_col1 = "";
line3_col1 = "";
line4_col1 = "";
line5_col1 = "";
line6_col1 = "";
line7_col1 = "";
line8_col1 = "";
line9_col1 = "";
line10_col1 = "";
line11_col1 = "";
line12_col1 = "";
line13_col1 = "";
line14_col1 = "";
line15_col1 = "";

line0_col2 = "";
line1_col2 = "";
line2_col2 = "";
line3_col2 = "";
line4_col2 = "";
line5_col2 = "";
line6_col2 = "";
line7_col2 = "";
line8_col2 = "";
line9_col2 = "";
line10_col2 = "";
line11_col2 = "";
line12_col2 = "";
line13_col2 = "";
line14_col2 = "";
line15_col2 = "";

line0_col3 = "";
line1_col3 = "";
line2_col3 = "";
line3_col3 = "";
line4_col3 = "";
line5_col3 = "";
line6_col3 = "";
line7_col3 = "";
line8_col3 = "";
line9_col3 = "";
line10_col3 = "";
line11_col3 = "";
line12_col3 = "";
line13_col3 = "";
line14_col3 = "";
line15_col3 = "";

line0_col4 = "";
line1_col4 = "";
line2_col4 = "";
line3_col4 = "";
line4_col4 = "";
line5_col4 = "";
line6_col4 = "";
line7_col4 = "";
line8_col4 = "";
line9_col4 = "";
line10_col4 = "";
line11_col4 = "";
line12_col4 = "";
line13_col4 = "";
line14_col4 = "";
line15_col4 = "";

line0_col5 = "";
line1_col5 = "";
line2_col5 = "";
line3_col5 = "";
line4_col5 = "";
line5_col5 = "";
line6_col5 = "";
line7_col5 = "";
line8_col5 = "";
line9_col5 = "";
line10_col5 = "";
line11_col5 = "";
line12_col5 = "";
line13_col5 = "";
line14_col5 = "";
line15_col5 = "";

line0_col6 = "";
line1_col6 = "";
line2_col6 = "";
line3_col6 = "";
line4_col6 = "";
line5_col6 = "";
line6_col6 = "";
line7_col6 = "";
line8_col6 = "";
line9_col6 = "";
line10_col6 = "";
line11_col6 = "";
line12_col6 = "";
line13_col6 = "";
line14_col6 = "";
line15_col6 = "";

line0x = 0;
line1x = 0;
line2x = 0;
line3x = 0;
line4x = 0;
line5x = 0;
line6x = 0;
line7x = 0;
line8x = 0;
line9x = 0;
line10x = 0;
line11x = 0;
line12x = 0;
line13x = 0;
line14x = 0;
line15x = 0;
conditional = false;
conditional_input = "";
conditional_ID = noone;
conditional_number = 0;
conditional_flow = 0;


display_string = str_store1;
str2 = str_store2;
str3 = str_store3;
str4 = str_store4;
str5 = str_store5;
str6 = str_store6;
str7 = str_store7;
str8 = str_store8;
str9 = str_store9;
str10 = str_store10;
type = type_store;
current_count = current_count_store;
portrait_index = portrait_index_store;
portrait_id = portrait_id_store;
message_count = message_count_store;
creating_inst = creating_inst_store;


FINAL_ACTIVE = true;
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>


//Editing beyond here is not recommended without good understanding of the contained code.
if !FINAL_ACTIVE || restartEngine {exit;}
if !instance_exists(o_text_box) {set_anchor = false; exit;}
if instance_exists(o_text_box) 
{
if !set_anchor
{
set_anchor = true;
anchor_x = o_text_box.x;
}
}

if mouse_check_button_pressed(mb_right) &amp;&amp; instance_exists(o_text_box)
{
//o_text_box.x = mouse_x;
//o_text_box.y = mouse_y;
}




if move_box &amp;&amp; instance_exists(o_text_box)
{


    if move_speed &lt; 10 &amp;&amp; !instant_move
    {
        if o_text_box.x != destination_x
        {
            var x_sign = sign(box_move_x);
            if move_amount_x &lt; abs(box_move_x)
            {
                o_text_box.x += x_sign*move_speed;
                move_amount_x += move_speed;
            }
            else {
                o_text_box.x = destination_x;
            }
        }
    
        if o_text_box.y != destination_y
        {
            

            var y_sign = sign(box_move_y);
            if move_amount_y &lt; abs(box_move_y)
            {
                o_text_box.y+= y_sign*move_speed;
                move_amount_y += move_speed;
            }
            else {
                o_text_box.y = destination_y;
            }

        }   
    }
    
    if o_text_box.y = destination_y &amp;&amp; o_text_box.x = destination_x {move_box = false;}
    if move_speed = 10 || instant_move {o_text_box.x = destination_x; o_text_box.y = destination_y; move_box = false;}

      
} else {
    instant_move = false;
    move_amount_x = 0;
    move_amount_y = 0;
    destination_x = 0;
    destination_y = 0;
    box_move_x = "";
    box_move_y = "";
    move_speed = "";
}

if instance_exists(o_text_box)
{
if keyboard_check_pressed(vk_backspace)
{
FINAL_ACTIVE = false; engineRestart = true; if instance_exists(o_text_box){o_text_box.destroy = true;} exit;
}
}

if keyboard_check_pressed(action_key) &amp;&amp; !final &amp;&amp; !conditional {skip = true; if audio_exists(snd_text_output){ audio_play_sound(snd_text_output,2,false);} }
if final &amp;&amp; keyboard_check_pressed(action_key) &amp;&amp; !conditional
{
if audio_exists(snd_next_message){ audio_play_sound(snd_next_message,2,false);}
switch(current_count)
{
case 1: 
if message_count &gt; 1 {display_string = str2; current_count += 1;}
else{FINAL_ACTIVE = false; engineRestart = true; if instance_exists(o_text_box){o_text_box.destroy = true;} exit;} 
break;
case 2: 
if message_count &gt; 2 {display_string = str3; current_count += 1;}
else{FINAL_ACTIVE = false; engineRestart = true;if instance_exists(o_text_box){o_text_box.destroy = true;} exit;} 
break;
case 3: 
if message_count &gt; 3 {display_string = str4; current_count += 1;}
else{FINAL_ACTIVE = false; engineRestart = true;if instance_exists(o_text_box){o_text_box.destroy = true;} exit;} 
break;
case 4: 
if message_count &gt; 4 {display_string = str5; current_count += 1;}
else{FINAL_ACTIVE = false; engineRestart = true;if instance_exists(o_text_box){o_text_box.destroy = true;} exit;} 
break;
case 5: 
if message_count &gt; 5 {display_string = str6; current_count += 1;}
else{FINAL_ACTIVE = false; engineRestart = true;if instance_exists(o_text_box){o_text_box.destroy = true;} exit;} 
break;
case 6: 
if message_count &gt; 6 {display_string = str7; current_count += 1;}
else{FINAL_ACTIVE = false; engineRestart = true;if instance_exists(o_text_box){o_text_box.destroy = true;} exit;} 
break;
case 7: 
if message_count &gt; 7 {display_string = str8; current_count += 1;}
else{FINAL_ACTIVE = false; engineRestart = true;if instance_exists(o_text_box){o_text_box.destroy = true;} exit;}
break;
case 8: 
if message_count &gt; 8 {display_string = str9; current_count += 1;}
else{FINAL_ACTIVE = false; engineRestart = true;if instance_exists(o_text_box){o_text_box.destroy = true;} exit;} 
break;
case 9: 
if message_count &gt; 9 {display_string = str10; current_count += 1;}
else{FINAL_ACTIVE = false; engineRestart = true;if instance_exists(o_text_box){o_text_box.destroy = true;} exit;} 
break;
case 10: 
FINAL_ACTIVE = false; engineRestart = true; if instance_exists(o_text_box){o_text_box.destroy = true;} exit;
break;
}

conditional = false;
conditional_input = "";
conditional_ID = noone;
conditional_number = 0;
conditional_flow = 0;

//Color lines
shake_alarm_x = 0;
shake_count_x = 0;
shake_alarm_y = 0;
shake_count_y = 0;
shake_duration = "";
shake_magnitude = "";
shake = false;
shake_initial = false;
line0_col1 = "";
line1_col1 = "";
line2_col1 = "";
line3_col1 = "";
line4_col1 = "";
line5_col1 = "";
line6_col1 = "";
line7_col1 = "";
line8_col1 = "";
line9_col1 = "";
line10_col1 = "";
line11_col1 = "";
line12_col1 = "";
line13_col1 = "";
line14_col1 = "";
line15_col1 = "";

line0_col2 = "";
line1_col2 = "";
line2_col2 = "";
line3_col2 = "";
line4_col2 = "";
line5_col2 = "";
line6_col2 = "";
line7_col2 = "";
line8_col2 = "";
line9_col2 = "";
line10_col2 = "";
line11_col2 = "";
line12_col2 = "";
line13_col2 = "";
line14_col2 = "";
line15_col2 = "";

line0_col3 = "";
line1_col3 = "";
line2_col3 = "";
line3_col3 = "";
line4_col3 = "";
line5_col3 = "";
line6_col3 = "";
line7_col3 = "";
line8_col3 = "";
line9_col3 = "";
line10_col3 = "";
line11_col3 = "";
line12_col3 = "";
line13_col3 = "";
line14_col3 = "";
line15_col3 = "";

line0_col4 = "";
line1_col4 = "";
line2_col4 = "";
line3_col4 = "";
line4_col4 = "";
line5_col4 = "";
line6_col4 = "";
line7_col4 = "";
line8_col4 = "";
line9_col4 = "";
line10_col4 = "";
line11_col4 = "";
line12_col4 = "";
line13_col4 = "";
line14_col4 = "";
line15_col4 = "";

line0_col5 = "";
line1_col5 = "";
line2_col5 = "";
line3_col5 = "";
line4_col5 = "";
line5_col5 = "";
line6_col5 = "";
line7_col5 = "";
line8_col5 = "";
line9_col5 = "";
line10_col5 = "";
line11_col5 = "";
line12_col5 = "";
line13_col5 = "";
line14_col5 = "";
line15_col5 = "";

line0_col6 = "";
line1_col6 = "";
line2_col6 = "";
line3_col6 = "";
line4_col6 = "";
line5_col6 = "";
line6_col6 = "";
line7_col6 = "";
line8_col6 = "";
line9_col6 = "";
line10_col6 = "";
line11_col6 = "";
line12_col6 = "";
line13_col6 = "";
line14_col6 = "";
line15_col6 = "";
icon1draw = false;
icon2draw = false;
icon3draw = false;
icon4draw = false;
icon5draw = false;
icon1row = 0;
icon2row = 0;
icon3row = 0;
icon4row = 0;
icon5row = 0;
icon1_anchor = 0;
icon2_anchor = 0;
icon3_anchor = 0;
icon4_anchor = 0;
icon5_anchor = 0;

icon1y = 0;
icon2y = 0;
icon3y = 0;
icon4y = 0;
icon5y = 0;

icon1x = 0;
icon2x = 0;
icon3x = 0;
icon4x = 0;
icon5x = 0;

icon1index = 0;
icon2index = 0;
icon3index = 0;
icon4index = 0;
icon5index = 0;
color1 = false;
color2 = false;
color3 = false;
color4 = false;
color5 = false;
color6 = false;
color1_draw = false;
color2_draw = false;
color3_draw = false;
color4_draw = false;
color5_draw = false;
color6_draw = false;

col_string = "";

final = false;
skip = false;
current_line = 0;
line0 = "";
line1 = "";
line2 = "";
line3 = "";
line4 = "";
line5 = "";
line6 = "";
line7 = "";
line8 = "";
line9 = "";
line0x = 0;
line1x = 0;
line2x = 0;
line3x = 0;
line4x = 0;
line5x = 0;
line6x = 0;
line7x = 0;
line8x = 0;
line9x = 0;
line10x = 0;
line11x = 0;
line12x = 0;
line13x = 0;
line14x = 0;
line15x = 0;
count = 0;
count_alarm = 0;
count_value = char_time;
}




if string_length(display_string) &gt; 0
{
draw = true;
}
else 
{
if draw
{

if instance_exists(o_text_box) {o_text_box.destroy = true;}
reset = true;
draw = false;
}
}


//========================================================
//========================================================
//========================================================
if !instance_exists(o_text_box) {exit;}

if draw
{
//Conditionals
if conditional_flow = 1 &amp;&amp; !instance_exists(o_text_conditionals) {conditional_flow = 0; conditional = false; wait = 0;}
if conditional &amp;&amp; conditional_flow = 0
{
conditional_flow = 1;
var con_inst = instance_create(o_text_box.x,o_text_box.y,o_text_conditionals);
var userInput = true;
switch(conditional_input)
{
case "YN": userInput = false; con_inst.type = "YN"; break; //create conditional instance, set type
case "TF": userInput = false; con_inst.type = "TF"; break; //create conditional instance, set type
}


if userInput
{
con_inst.type = "user";
var con_str1 = "";
var con_str2 = "";
var con_str3 = "";
var con_str4 = "";
var con_str5 = "";
var c = "";
var con_str_count = 1;
var con_count = 0;
repeat(string_length(conditional_input)) //Separates conditional inputs into separate strings.
{
con_count += 1;
c = string_char_at(conditional_input,con_count);
if c != "/"
{
switch(con_str_count)
{
case 1: con_str1 = string(con_str1)+string(c); break;
case 2: con_str2 = string(con_str2)+string(c); break;
case 3: con_str3 = string(con_str3)+string(c); break;
case 4: con_str4 = string(con_str4)+string(c); break;
case 5: con_str5 = string(con_str5)+string(c); break;
}
}
else{con_str_count += 1;}
}
con_inst.type = "user";
con_inst.str1 = con_str1;
con_inst.str2 = con_str2;
con_inst.str3 = con_str3;
con_inst.str4 = con_str4;
con_inst.str5 = con_str5;
}
con_inst.conditional_ID = conditional_ID;
con_inst.number = conditional_number;
}



//sound effect
if play_sound
{
play_sound = false;
audio_play_sound(sound_index,2,false);
sound_index = noone;
}

//drawing sounds
if !final &amp;&amp; wait = 0
{
blip_alarm += 1;
if blip_alarm = 15
{
blip_alarm = 0;
if audio_exists(snd_text_output) {audio_play_sound(snd_text_output,2,false);}
}
}

//Shake
if instance_exists(o_text_box)
{
if shake_magnitude &gt; 0
{
if !shake_initial {shake_initial = true; shake_ix = o_text_box.x; shake_iy = o_text_box.y;} 
if shake_duration &gt; 0 {shake_duration -= 1;}
if shake_duration = 0 {shake = false;}

var move_x, move_y;
move_x = shake_magnitude + irandom_range(-3,3);
move_y = shake_magnitude + irandom_range(-3,3);



shake_alarm_x += 1;
if shake_alarm_x = alarm_value_x
{
alarm_value_x = irandom_range(4,7);
shake_alarm_x = 0;
shake_count_x += 1;
if shake_count_x &gt; 1 {shake_count_x = 0;}
switch(shake_count_x)
{
case 0: o_text_box.x = shake_ix+move_x; break;
case 1: o_text_box.x = shake_ix-move_x; break;
}
}

shake_alarm_y += 1;
if shake_alarm_y = alarm_value_y
{
alarm_value_y = irandom_range(4,7);
shake_alarm_y = 0;
shake_count_y += 1;
if shake_count_y &gt; 1 {shake_count_y = 0;}
switch(shake_count_y)
{
case 0: o_text_box.y = shake_iy+move_y; break;
case 1: o_text_box.y = shake_iy-move_y; break;
}
}
if !shake {shake_magnitude -= 0.2;}
if shake_magnitude &lt; 0.3 {shake_magnitude = 0; shake_alarm_x = 0; shake_alarm_y = 0; o_text_box.y = shake_iy;  o_text_box.x = shake_ix;}
}
}


if instance_exists(o_text_box)
{
o_text_box.visible = true;
box_width = o_text_box.sprite_width;

switch(o_text_box.type)
{
case "Speech":
max_width = max_width_speech;
box_x = o_text_box.x+10 + x_offset_speech;
box_y = o_text_box.y+10 + y_offset_speech;
o_text_box.image_index = 1;

line0x = box_x;
line1x = box_x;
line2x = box_x;
line3x = box_x;
line4x = box_x;
line5x = box_x;
line6x = box_x;
line7x = box_x;
line8x = box_x;
line9x = box_x;
line10x = box_x;
line11x = box_x;
line12x = box_x;
line13x = box_x;
line14x = box_x;
line15x = box_x;

if current_line &gt; 3 {box_x = o_text_box.x+40;}
draw_set_halign(fa_left);
draw_set_font(speech_font);
break;

case "Statement":
max_width = o_text_box.sprite_width - 70;
box_x = o_text_box.x+(o_text_box.sprite_width/2);
box_y = o_text_box.y+(o_text_box.sprite_height/2)-20;
o_text_box.image_index = 2;
line0x = box_x;
line1x = box_x;
line2x = box_x;
line3x = box_x;
line4x = box_x;
line5x = box_x;
line6x = box_x;
line7x = box_x;
line8x = box_x;
line9x = box_x;
line10x = box_x;
line11x = box_x;
line12x = box_x;
line13x = box_x;
line14x = box_x;
line15x = box_x;
draw_set_halign(fa_center);
draw_set_font(statement_font);
break;

case "Story":
box_x = o_text_box.x+10 + x_offset;
box_y = o_text_box.y+10 + y_offset;
o_text_box.image_index = 0;
line0x = box_x;
line1x = box_x;
line2x = box_x;
line3x = box_x;
line4x = box_x;
line5x = box_x;
line6x = box_x;
line7x = box_x;
line8x = box_x;
line9x = box_x;
line10x = box_x;
line11x = box_x;
line12x = box_x;
line13x = box_x;
line14x = box_x;
line15x = box_x;
draw_set_halign(fa_left);
draw_set_font(story_font);
break;
}
}

//Normal Start
var total_length = string_length(display_string);
var char = "";
if count &lt; total_length &amp;&amp; !skip &amp;&amp; wait = 0
{

count_alarm += 1;
if count_alarm = count_value
{
count_alarm = 0;
count += 1;
char = string_char_at(display_string,count);

//Disengage Color Drawing
if col_active &amp;&amp; char == "@"
{
col_active = false;
//col_string
char = "";
var tot_width = string_width(col_string);
var space_width = string_width(" ");

var correction = (tot_width - (string_length(col_string)*space_width));
var correction_repeat = round(correction / space_width);
repeat(correction_repeat)
{
char = string(char) + string(" ");
}
col_string = "";
var col_deactivate = false;
if !col_deactivate &amp;&amp; color6 {color6 = false; col_deactivate = true;}
if !col_deactivate &amp;&amp; color5 {color5 = false; col_deactivate = true;}
if !col_deactivate &amp;&amp; color4 {color4 = false; col_deactivate = true;}
if !col_deactivate &amp;&amp; color3 {color3 = false; col_deactivate = true;}
if !col_deactivate &amp;&amp; color2 {color2 = false; col_deactivate = true;}
if !col_deactivate &amp;&amp; color1 {color1 = false; col_deactivate = true;}
}

if col_active {char = " ";}
//Add effects here
//=========================================

//Conditionals
//C(1,TF)
if char == "C"
{
var test_char = string_char_at(display_string,count+1);
if test_char == "("
{
//It is a conditional
count += 1;
var conN = "";
while(char!=",")
{
count += 1;
char = string_char_at(display_string,count);
if char != "," {conN = string(conN) + string(char);}
}
var conInput = "";
while(char != ")")
{
count += 1;
char = string_char_at(display_string,count);
if char != ")" {conInput = string(conInput) + string(char);}
}
count += 1;
conditional = true;
conditional_input = conInput;
conditional_number = real(conN);
conditional_ID = creating_inst;
wait = 1;
exit;

}
}

//variable insertion
/*
if char == "("
{
//  ((o_example_text,count/N
var test_char = string_char_at(display_string,count+1);
if test_char == "("
{
count += 1;
while(char!=",")
{
count += 1;
char = string_char_at(display_string,count);
if char!=","{insert_id = string(insert_id) + string(char);}
}
insert_id = asset_get_index(insert_id);

while(char!="/")
{
count += 1;
char = string_char_at(display_string,count);
if char!="/"{insert_var = string(insert_var) + string(char);}
}
count += 1;
char = string_char_at(display_string,count);
var color_letter = string_char_at(display_string,count);
            
var unique_id = instance_find(insert_id,0);
insert_var = variable_instance_get(unique_id,insert_var);
insert_str = "@"+string(color_letter)+string(insert_var)+"@";
display_string = string_insert(insert_str,display_string,count+1);

insert_var = "";
insert_str = "";
insert_id = "";
exit;
}
}
*/

//move effect

if char == "("
{
//()100/-200,5/
var test_char = string_char_at(display_string,count+1);
if test_char == ")"
{
count += 1;
while(char!="/")
{
count += 1;
char = string_char_at(display_string,count);
if char!="/"{box_move_x = string(box_move_x) + string(char);}
}
while(char!=",")
{
count += 1;
char = string_char_at(display_string,count);
if char!=","{box_move_y = string(box_move_y) + string(char);}
}
while(char!="/")
{
count += 1;
char = string_char_at(display_string,count);
if char!="/"{move_speed = string(move_speed) + string(char);}
}
box_move_x = real(box_move_x);
box_move_y = real(box_move_y);
destination_x = o_text_box.x+box_move_x;
destination_y = o_text_box.y+box_move_y;
move_speed = real(move_speed);
move_box = true;
count += 1;
char = string_char_at(display_string,count);
}
}


//Sound Effect
if char == "|"
{
var snd_index = "";
while(char!="/")
{
count += 1;
char = string_char_at(display_string,count);
if char!="/"{snd_index = string(snd_index) + string(char);}
}
snd_index = asset_get_index(snd_index);
play_sound = true;
sound_index = snd_index;
count += 1;
char = string_char_at(display_string,count);
}

//Shake effect
if char == "*"
{
while(char != "/")
{
count += 1;
char = string_char_at(display_string,count);
if char != "/" {shake_duration = string(shake_duration) + string(char);}
}
while(char != "M")
{
count += 1;
char = string_char_at(display_string,count);
if char != "M" {shake_magnitude = string(shake_magnitude) + string(char);}
}
count += 1;
char = string_char_at(display_string,count);

shake_magnitude = real(shake_magnitude);
shake_duration = real(shake_duration);
shake = true;
}

//Portrait Change
if char == "&amp;"
{
var new_sprite = "";
var new_index = "";

while(char != "/")
{
count += 1;
char = string_char_at(display_string,count);
if char != "/" {new_sprite = string(new_sprite)+string(char);}
}
while(char != "&amp;")
{
count += 1;
char = string_char_at(display_string,count);
if char != "&amp;" {new_index = string(new_index)+string(char);}
}
new_sprite = asset_get_index(new_sprite); 
new_index = real(new_index);

portrait_index = new_sprite;
potrait_id = new_index;

if instance_exists(o_text_portrait)
{
o_text_portrait.sprite_index = portrait_index;
o_text_portrait.image_index = potrait_id;
}
char = "";
}

//Icon Effect
if char == "^"
{
count += 1;
icon_row = current_line;
var line_anchor;
switch(icon_row)
{
case 0: icon_x = string_width(line0) + line0x; line_anchor = string_width(line0); break;
case 1: icon_x = string_width(line1) + line1x; line_anchor = string_width(line1); break;
case 2: icon_x = string_width(line2) + line2x; line_anchor = string_width(line2); break;
case 3: icon_x = string_width(line3) + line3x; line_anchor = string_width(line3); break;
case 4: icon_x = string_width(line4) + line4x; line_anchor = string_width(line4); break;
case 5: icon_x = string_width(line5) + line5x; line_anchor = string_width(line5); break;
case 6: icon_x = string_width(line6) + line6x; line_anchor = string_width(line6); break;
case 7: icon_x = string_width(line7) + line7x; line_anchor = string_width(line7); break;
case 8: icon_x = string_width(line8) + line8x; line_anchor = string_width(line8); break;
case 9: icon_x = string_width(line9) + line9x; line_anchor = string_width(line9); break;
case 10: icon_x = string_width(line10) + line10x; line_anchor = string_width(line10); break;
case 11: icon_x = string_width(line11) + line11x; line_anchor = string_width(line11); break;
case 12: icon_x = string_width(line12) + line12x; line_anchor = string_width(line12); break;
case 13: icon_x = string_width(line13) + line13x; line_anchor = string_width(line13); break;
case 14: icon_x = string_width(line14) + line14x; line_anchor = string_width(line14); break;
case 15: icon_x = string_width(line15) + line15x; line_anchor = string_width(line15); break;
}
var activate_icon = false;
if !activate_icon &amp;&amp; !icon1draw {icon1draw = true; icon1row = icon_row; icon1x = icon_x; icon1index = real(string_char_at(display_string,count)); icon1_anchor = line_anchor; activate_icon = true;}
if !activate_icon &amp;&amp; !icon2draw {icon2draw = true; icon2row = icon_row; icon2x = icon_x; icon2index = real(string_char_at(display_string,count)); icon2_anchor = line_anchor; activate_icon = true;}
if !activate_icon &amp;&amp; !icon3draw {icon3draw = true; icon3row = icon_row; icon3x = icon_x; icon3index = real(string_char_at(display_string,count)); icon3_anchor = line_anchor; activate_icon = true;}
if !activate_icon &amp;&amp; !icon4draw {icon4draw = true; icon4row = icon_row; icon4x = icon_x; icon4index = real(string_char_at(display_string,count)); icon4_anchor = line_anchor; activate_icon = true;}
if !activate_icon &amp;&amp; !icon5draw {icon5draw = true; icon5row = icon_row; icon5x = icon_x; icon5index = real(string_char_at(display_string,count)); icon5_anchor = line_anchor; activate_icon = true;}

char = "";
var space_width = string_width(" ");
var correction_repeat = round(45/space_width);
repeat(correction_repeat)
{
char = string(char)+string(" ");
}
}

//Wait Effect
if char == "&lt;"
{
var wait_str = "";
while char != "&gt;"
{
count += 1;
char = string_char_at(display_string,count);
if char != "&gt;" {wait_str = string(wait_str) + string(char);}
}
wait = real(wait_str);
char = "";
}


//Color Change Effect
if char == "@"
{
col_active = true;
count += 1;
var col_id = string_char_at(display_string,count);
switch(col_id)
{
case "R": color_index = c_red; break;
case "G": color_index = c_green; break;
case "B": color_index = c_blue; break;
case "Y": color_index = c_yellow; break;
case "O": color_index = c_orange; break;
case "L": color_index = c_lime; break;
case "X": color_index = c_black; break;
case "P": color_index = c_purple; break;
case "S": color_index = c_silver; break;
case "A": color_index = c_aqua; break;
case "F": color_index = c_fuchsia; break;
case "M": color_index = c_maroon; break;
case "Q": color_index = c_dkgray; break;
case "E": color_index = c_ltgray; break;
case "W": color_index = c_white; break;
}

var activate = false;
if !activate &amp;&amp; !color1_draw 
{
color1 = true; activate = true; color1_index = color_index;
line0_col1 = line0;
line1_col1 = line1;
line2_col1 = line2;
line3_col1 = line3;
line4_col1 = line4;
line5_col1 = line5;
line6_col1 = line6;
line7_col1 = line7;
line8_col1 = line8;
line9_col1 = line9;
line10_col1 = line10;
line11_col1 = line11;
line12_col1 = line12;
line13_col1 = line13;
line14_col1 = line14;
line15_col1 = line15;
}
if !activate &amp;&amp; !color2_draw 
{
color2 = true; activate = true; color2_index = color_index;
line0_col2 = line0;
line1_col2 = line1;
line2_col2 = line2;
line3_col2 = line3;
line4_col2 = line4;
line5_col2 = line5;
line6_col2 = line6;
line7_col2 = line7;
line8_col2 = line8;
line9_col2 = line9;
line10_col2 = line10;
line11_col2 = line11;
line12_col2 = line12;
line13_col2 = line13;
line14_col2 = line14;
line15_col2 = line15;
}
if !activate &amp;&amp; !color3_draw 
{
color3 = true; activate = true; color3_index = color_index;
line0_col3 = line0;
line1_col3 = line1;
line2_col3 = line2;
line3_col3 = line3;
line4_col3 = line4;
line5_col3 = line5;
line6_col3 = line6;
line7_col3 = line7;
line8_col3 = line8;
line9_col3 = line9;
line10_col3 = line10;
line11_col3 = line11;
line12_col3 = line12;
line13_col3 = line13;
line14_col3 = line14;
line15_col3 = line15;
}
if !activate &amp;&amp; !color4_draw 
{
color4 = true; activate = true; color4_index = color_index;
line0_col4 = line0;
line1_col4 = line1;
line2_col4 = line2;
line3_col4 = line3;
line4_col4 = line4;
line5_col4 = line5;
line6_col4 = line6;
line7_col4 = line7;
line8_col4 = line8;
line9_col4 = line9;
line10_col4 = line10;
line11_col4 = line11;
line12_col4 = line12;
line13_col4 = line13;
line14_col4 = line14;
line15_col4 = line15;
}
if !activate &amp;&amp; !color5_draw 
{
color5 = true; activate = true; color5_index = color_index;
line0_col5 = line0;
line1_col5 = line1;
line2_col5 = line2;
line3_col5 = line3;
line4_col5 = line4;
line5_col5 = line5;
line6_col5 = line6;
line7_col5 = line7;
line8_col5 = line8;
line9_col5 = line9;
line10_col5 = line10;
line11_col5 = line11;
line12_col5 = line12;
line13_col5 = line13;
line14_col5 = line14;
line15_col5 = line15;
}
if !activate &amp;&amp; !color6_draw 
{
color6 = true; activate = true; color6_index = color_index;
line0_col6 = line0;
line1_col6 = line1;
line2_col6 = line2;
line3_col6 = line3;
line4_col6 = line4;
line5_col6 = line5;
line6_col6 = line6;
line7_col6 = line7;
line8_col6 = line8;
line9_col6 = line9;
line10_col6 = line10;
line11_col6 = line11;
line12_col6 = line12;
line13_col6 = line13;
line14_col6 = line14;
line15_col6 = line15;
}
color_index = initial_col; // Default Index

exit
}
//=========================================

switch(current_line)
{
case 0: 
if char != "#" {line0 = string(line0)+string(char);}
if string_width(line0) &gt; max_width &amp;&amp; char = " " &amp;&amp; !col_active || char = "#" {current_line += 1;}
break;
case 1: 
if char != "#" {line1 = string(line1)+string(char);}
if string_width(line1) &gt; max_width &amp;&amp; char = " " &amp;&amp; !col_active || char = "#" {current_line += 1;} 
break;
case 2: 
if char != "#" {line2 = string(line2)+string(char);}
if string_width(line2) &gt; max_width &amp;&amp; char = " " &amp;&amp; !col_active || char = "#" {current_line += 1;} 
break;
case 3: 
if char != "#" {line3 = string(line3)+string(char);}
if string_width(line3) &gt; max_width &amp;&amp; char = " " &amp;&amp; !col_active || char = "#" {current_line += 1;}
break;
case 4: 
if char != "#" {line4 = string(line4)+string(char);}
if string_width(line4) &gt; max_width &amp;&amp; char = " " &amp;&amp; !col_active || char = "#" {current_line += 1;}
break;
case 5: 
if char != "#" {line5 = string(line5)+string(char);}
if string_width(line5) &gt; max_width &amp;&amp; char = " " &amp;&amp; !col_active || char = "#" {current_line += 1;}
break;
case 6: 
if char != "#" {line6 = string(line6)+string(char);}
if string_width(line6) &gt; max_width &amp;&amp; char = " " &amp;&amp; !col_active || char = "#" {current_line += 1;}
break;
case 7: 
if char != "#" {line7 = string(line7)+string(char);}
if string_width(line7) &gt; max_width &amp;&amp; char = " " &amp;&amp; !col_active || char = "#" {current_line += 1;}
break;
case 8: 
if char != "#" {line8 = string(line8)+string(char);}
if string_width(line8) &gt; max_width &amp;&amp; char = " " &amp;&amp; !col_active || char = "#" {current_line += 1;}
break;
case 9: 
if char != "#" {line9 = string(line9)+string(char);}
if string_width(line9) &gt; max_width &amp;&amp; char = " " &amp;&amp; !col_active || char = "#" {current_line += 1;}
break;
case 10: 
if char != "#" {line10 = string(line10)+string(char);}
if string_width(line10) &gt; max_width &amp;&amp; char = " " &amp;&amp; !col_active || char = "#" {current_line += 1;}
break;
case 11: 
if char != "#" {line11 = string(line11)+string(char);}
if string_width(line11) &gt; max_width &amp;&amp; char = " " &amp;&amp; !col_active || char = "#" {current_line += 1;}
break;
case 12: 
if char != "#" {line12 = string(line12)+string(char);}
if string_width(line12) &gt; max_width &amp;&amp; char = " " &amp;&amp; !col_active || char = "#" {current_line += 1;}
break;
case 13: 
if char != "#" {line13 = string(line13)+string(char);}
if string_width(line13) &gt; max_width &amp;&amp; char = " " &amp;&amp; !col_active || char = "#" {current_line += 1;}
break;
case 14: 
if char != "#" {line14 = string(line14)+string(char);}
if string_width(line14) &gt; max_width &amp;&amp; char = " " &amp;&amp; !col_active || char = "#" {current_line += 1;}
break;
case 15: 
if char != "#" {line15 = string(line15)+string(char);}
if string_width(line15) &gt; max_width &amp;&amp; char = " " &amp;&amp; !col_active || char = "#" {current_line += 1;}
break;
}



//COLOR INTEGRATION
//==================================================================
if col_active
{
col_char = string_char_at(display_string,count);
col_string = string(col_string) + string(col_char); //This creates the entire colored string.
if color1
{
//Color1
switch(current_line)
{
case 0: if col_char != "#" {line0_col1 = string(line0_col1)+string(col_char);} if string_width(line0_col1) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 1: if col_char != "#" {line1_col1 = string(line1_col1)+string(col_char);} if string_width(line1_col1) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 2: if col_char != "#" {line2_col1 = string(line2_col1)+string(col_char);} if string_width(line2_col1) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 3: if col_char != "#" {line3_col1 = string(line3_col1)+string(col_char);} if string_width(line3_col1) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 4: if col_char != "#" {line4_col1 = string(line4_col1)+string(col_char);} if string_width(line4_col1) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 5: if col_char != "#" {line5_col1 = string(line5_col1)+string(col_char);} if string_width(line5_col1) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 6: if col_char != "#" {line6_col1 = string(line6_col1)+string(col_char);} if string_width(line6_col1) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 7: if col_char != "#" {line7_col1 = string(line7_col1)+string(col_char);} if string_width(line7_col1) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 8: if col_char != "#" {line8_col1 = string(line8_col1)+string(col_char);} if string_width(line8_col1) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 9: if col_char != "#" {line9_col1 = string(line9_col1)+string(col_char);} if string_width(line9_col1) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 10: if col_char != "#" {line10_col1 = string(line10_col1)+string(col_char);} if string_width(line10_col1) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 11: if col_char != "#" {line11_col1 = string(line11_col1)+string(col_char);} if string_width(line11_col1) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 12: if col_char != "#" {line12_col1 = string(line12_col1)+string(col_char);} if string_width(line12_col1) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 13: if col_char != "#" {line13_col1 = string(line13_col1)+string(col_char);} if string_width(line13_col1) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 14: if col_char != "#" {line14_col1 = string(line14_col1)+string(col_char);} if string_width(line14_col1) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 15: if col_char != "#" {line15_col1 = string(line15_col1)+string(col_char);} if string_width(line15_col1) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
}
}
if color2
{
//Color2
switch(current_line)
{
case 0: if col_char != "#" {line0_col2 = string(line0_col2)+string(col_char);} if string_width(line0_col2) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 1: if col_char != "#" {line1_col2 = string(line1_col2)+string(col_char);} if string_width(line1_col2) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 2: if col_char != "#" {line2_col2 = string(line2_col2)+string(col_char);} if string_width(line2_col2) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 3: if col_char != "#" {line3_col2 = string(line3_col2)+string(col_char);} if string_width(line3_col2) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 4: if col_char != "#" {line4_col2 = string(line4_col2)+string(col_char);} if string_width(line4_col2) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 5: if col_char != "#" {line5_col2 = string(line5_col2)+string(col_char);} if string_width(line5_col2) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 6: if col_char != "#" {line6_col2 = string(line6_col2)+string(col_char);} if string_width(line6_col2) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 7: if col_char != "#" {line7_col2 = string(line7_col2)+string(col_char);} if string_width(line7_col2) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 8: if col_char != "#" {line8_col2 = string(line8_col2)+string(col_char);} if string_width(line8_col2) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 9: if col_char != "#" {line9_col2 = string(line9_col2)+string(col_char);} if string_width(line9_col2) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 10: if col_char != "#" {line10_col2 = string(line10_col2)+string(col_char);} if string_width(line10_col2) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 11: if col_char != "#" {line11_col2 = string(line11_col2)+string(col_char);} if string_width(line11_col2) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 12: if col_char != "#" {line12_col2 = string(line12_col2)+string(col_char);} if string_width(line12_col2) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 13: if col_char != "#" {line13_col2 = string(line13_col2)+string(col_char);} if string_width(line13_col2) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 14: if col_char != "#" {line14_col2 = string(line14_col2)+string(col_char);} if string_width(line14_col2) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 15: if col_char != "#" {line15_col2 = string(line15_col2)+string(col_char);} if string_width(line15_col2) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
}
}
if color3
{
//Color3
switch(current_line)
{
case 0: if col_char != "#" {line0_col3 = string(line0_col3)+string(col_char);} if string_width(line0_col3) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 1: if col_char != "#" {line1_col3 = string(line1_col3)+string(col_char);} if string_width(line1_col3) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 2: if col_char != "#" {line2_col3 = string(line2_col3)+string(col_char);} if string_width(line2_col3) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 3: if col_char != "#" {line3_col3 = string(line3_col3)+string(col_char);} if string_width(line3_col3) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 4: if col_char != "#" {line4_col3 = string(line4_col3)+string(col_char);} if string_width(line4_col3) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 5: if col_char != "#" {line5_col3 = string(line5_col3)+string(col_char);} if string_width(line5_col3) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 6: if col_char != "#" {line6_col3 = string(line6_col3)+string(col_char);} if string_width(line6_col3) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 7: if col_char != "#" {line7_col3 = string(line7_col3)+string(col_char);} if string_width(line7_col3) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 8: if col_char != "#" {line8_col3 = string(line8_col3)+string(col_char);} if string_width(line8_col3) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 9: if col_char != "#" {line9_col3 = string(line9_col3)+string(col_char);} if string_width(line9_col3) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 10: if col_char != "#" {line10_col3 = string(line10_col3)+string(col_char);} if string_width(line10_col3) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 11: if col_char != "#" {line11_col3 = string(line11_col3)+string(col_char);} if string_width(line11_col3) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 12: if col_char != "#" {line12_col3 = string(line12_col3)+string(col_char);} if string_width(line12_col3) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 13: if col_char != "#" {line13_col3 = string(line13_col3)+string(col_char);} if string_width(line13_col3) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 14: if col_char != "#" {line14_col3 = string(line14_col3)+string(col_char);} if string_width(line14_col3) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 15: if col_char != "#" {line15_col3 = string(line15_col3)+string(col_char);} if string_width(line15_col3) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
}
}
if color4
{
//Color4
switch(current_line)
{
case 0: if col_char != "#" {line0_col4 = string(line0_col4)+string(col_char);} if string_width(line0_col4) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 1: if col_char != "#" {line1_col4 = string(line1_col4)+string(col_char);} if string_width(line1_col4) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 2: if col_char != "#" {line2_col4 = string(line2_col4)+string(col_char);} if string_width(line2_col4) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 3: if col_char != "#" {line3_col4 = string(line3_col4)+string(col_char);} if string_width(line3_col4) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 4: if col_char != "#" {line4_col4 = string(line4_col4)+string(col_char);} if string_width(line4_col4) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 5: if col_char != "#" {line5_col4 = string(line5_col4)+string(col_char);} if string_width(line5_col4) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 6: if col_char != "#" {line6_col4 = string(line6_col4)+string(col_char);} if string_width(line6_col4) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 7: if col_char != "#" {line7_col4 = string(line7_col4)+string(col_char);} if string_width(line7_col4) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 8: if col_char != "#" {line8_col4 = string(line8_col4)+string(col_char);} if string_width(line8_col4) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 9: if col_char != "#" {line9_col4 = string(line9_col4)+string(col_char);} if string_width(line9_col4) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 10: if col_char != "#" {line10_col4 = string(line10_col4)+string(col_char);} if string_width(line10_col4) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 11: if col_char != "#" {line11_col4 = string(line11_col4)+string(col_char);} if string_width(line11_col4) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 12: if col_char != "#" {line12_col4 = string(line12_col4)+string(col_char);} if string_width(line12_col4) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 13: if col_char != "#" {line13_col4 = string(line13_col4)+string(col_char);} if string_width(line13_col4) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 14: if col_char != "#" {line14_col4 = string(line14_col4)+string(col_char);} if string_width(line14_col4) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 15: if col_char != "#" {line15_col4 = string(line15_col4)+string(col_char);} if string_width(line15_col4) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
}
}
if color5
{
//Color5
switch(current_line)
{
case 0: if col_char != "#" {line0_col5 = string(line0_col5)+string(col_char);} if string_width(line0_col5) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 1: if col_char != "#" {line1_col5 = string(line1_col5)+string(col_char);} if string_width(line1_col5) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 2: if col_char != "#" {line2_col5 = string(line2_col5)+string(col_char);} if string_width(line2_col5) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 3: if col_char != "#" {line3_col5 = string(line3_col5)+string(col_char);} if string_width(line3_col5) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 4: if col_char != "#" {line4_col5 = string(line4_col5)+string(col_char);} if string_width(line4_col5) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 5: if col_char != "#" {line5_col5 = string(line5_col5)+string(col_char);} if string_width(line5_col5) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 6: if col_char != "#" {line6_col5 = string(line6_col5)+string(col_char);} if string_width(line6_col5) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 7: if col_char != "#" {line7_col5 = string(line7_col5)+string(col_char);} if string_width(line7_col5) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 8: if col_char != "#" {line8_col5 = string(line8_col5)+string(col_char);} if string_width(line8_col5) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 9: if col_char != "#" {line9_col5 = string(line9_col5)+string(col_char);} if string_width(line9_col5) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 10: if col_char != "#" {line10_col5 = string(line10_col5)+string(col_char);} if string_width(line10_col5) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 11: if col_char != "#" {line11_col5 = string(line11_col5)+string(col_char);} if string_width(line11_col5) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 12: if col_char != "#" {line12_col5 = string(line12_col5)+string(col_char);} if string_width(line12_col5) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 13: if col_char != "#" {line13_col5 = string(line13_col5)+string(col_char);} if string_width(line13_col5) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 14: if col_char != "#" {line14_col5 = string(line14_col5)+string(col_char);} if string_width(line14_col5) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 15: if col_char != "#" {line15_col5 = string(line15_col5)+string(col_char);} if string_width(line15_col5) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
}
}
if color6
{
//Color6
switch(current_line)
{
case 0: if col_char != "#" {line0_col6 = string(line0_col6)+string(col_char);} if string_width(line0_col6) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 1: if col_char != "#" {line1_col6 = string(line1_col6)+string(col_char);} if string_width(line1_col6) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 2: if col_char != "#" {line2_col6 = string(line2_col6)+string(col_char);} if string_width(line2_col6) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 3: if col_char != "#" {line3_col6 = string(line3_col6)+string(col_char);} if string_width(line3_col6) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 4: if col_char != "#" {line4_col6 = string(line4_col6)+string(col_char);} if string_width(line4_col6) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 5: if col_char != "#" {line5_col6 = string(line5_col6)+string(col_char);} if string_width(line5_col6) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 6: if col_char != "#" {line6_col6 = string(line6_col6)+string(col_char);} if string_width(line6_col6) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 7: if col_char != "#" {line7_col6 = string(line7_col6)+string(col_char);} if string_width(line7_col6) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 8: if col_char != "#" {line8_col6 = string(line8_col6)+string(col_char);} if string_width(line8_col6) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 9: if col_char != "#" {line9_col6 = string(line9_col6)+string(col_char);} if string_width(line9_col6) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 10: if col_char != "#" {line10_col6 = string(line10_col6)+string(col_char);} if string_width(line10_col6) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 11: if col_char != "#" {line11_col6 = string(line11_col6)+string(col_char);} if string_width(line11_col6) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 12: if col_char != "#" {line12_col6 = string(line12_col6)+string(col_char);} if string_width(line12_col6) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 13: if col_char != "#" {line13_col6 = string(line13_col6)+string(col_char);} if string_width(line13_col6) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 14: if col_char != "#" {line14_col6 = string(line14_col6)+string(col_char);} if string_width(line14_col6) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 15: if col_char != "#" {line15_col6 = string(line15_col6)+string(col_char);} if string_width(line15_col6) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
}
}
}
//==================================================================
}
}
if wait &gt; 0 &amp;&amp; !conditional {wait -= 1;}
if count = total_length {final = true;}
//Normal End


//While Skip Start
if skip
{
wait = 0;
while(count &lt; total_length)
{
count += 1;
char = string_char_at(display_string,count);

//Disengage Color Drawing
if col_active &amp;&amp; char == "@"
{
col_active = false;
//col_string
char = "";
var tot_width = string_width(col_string);
var space_width = string_width(" ");

var correction = (tot_width - (string_length(col_string)*space_width));
var correction_repeat = round(correction / space_width);
repeat(correction_repeat)
{
char = string(char) + string(" ");
}
col_string = "";
var col_deactivate = false;
if !col_deactivate &amp;&amp; color6 {color6 = false; col_deactivate = true;}
if !col_deactivate &amp;&amp; color5 {color5 = false; col_deactivate = true;}
if !col_deactivate &amp;&amp; color4 {color4 = false; col_deactivate = true;}
if !col_deactivate &amp;&amp; color3 {color3 = false; col_deactivate = true;}
if !col_deactivate &amp;&amp; color2 {color2 = false; col_deactivate = true;}
if !col_deactivate &amp;&amp; color1 {color1 = false; col_deactivate = true;}
}

if col_active {char = " ";}

//Effect Consideration
//=========================================

//Conditionals
//C(1,TF)
if char == "C"
{
var test_char = string_char_at(display_string,count+1);
if test_char == "("
{
//It is a conditional
count += 1;
var conN = "";
while(char!=",")
{
count += 1;
char = string_char_at(display_string,count);
if char != "," {conN = string(conN) + string(char);}
}
var conInput = "";
while(char != ")")
{
count += 1;
char = string_char_at(display_string,count);
if char != ")" {conInput = string(conInput) + string(char);}
}
count += 1;
conditional = true;
conditional_input = conInput;
conditional_number = real(conN);
conditional_ID = creating_inst;
wait = 1;
skip = false;
exit;

}
}


//Variable insertion
/*
if char == "("
{
//  ((o_example_text,count/N
var test_char = string_char_at(display_string,count+1);
if test_char == "("
{
count += 1;
while(char!=",")
{
count += 1;
char = string_char_at(display_string,count);
if char!=","{insert_id = string(insert_id) + string(char);}
}
insert_id = asset_get_index(insert_id);

while(char!="/")
{
count += 1;
char = string_char_at(display_string,count);
if char!="/"{insert_var = string(insert_var) + string(char);}
}
count += 1;
char = string_char_at(display_string,count);
var color_letter = string_char_at(display_string,count);
            
var unique_id = instance_find(insert_id,0);
insert_var = variable_instance_get(unique_id,insert_var);
insert_str = "@"+string(color_letter)+string(insert_var)+"@";
display_string = string_insert(insert_str,display_string,count+1);

insert_var = "";
insert_str = "";
insert_id = "";
continue;
}
}
*/

//move effect

if char == "("
{
    //()100/-200,5/
    var test_char = string_char_at(display_string,count+1);
    if test_char == ")"
    {
        count += 1;
        while(char!="/")
        {
        count += 1;
        char = string_char_at(display_string,count);
        if char!="/"{box_move_x = string(box_move_x) + string(char);}
        }
        while(char!=",")
        {
        count += 1;
        char = string_char_at(display_string,count);
        if char!="/"{box_move_y = string(box_move_y) + string(char);}
        }
        while(char!="/")
        {
        count += 1;
        char = string_char_at(display_string,count);
        if char!="/"{move_speed = string(move_speed) + string(char);}
        }
        box_move_x = real(box_move_x);
        box_move_y = real(box_move_y);
        destination_x = o_text_box.x+box_move_x;
        destination_y = o_text_box.y+box_move_y;
        move_speed = real(move_speed);
        move_box = true;
        count += 1;
        instant_move = true;
        char = string_char_at(display_string,count);
    }                                                                                                                                       
    else
    {
        //count += 1;
        //char = string_char_at(display_string,count);
    }
}


//Sound ignore
if char == "|"
{
while(char!="/")
{
count += 1;
char = string_char_at(display_string,count);
}
count += 1;
char = string_char_at(display_string,count);
}
//Shake ignore
if char == "*"
{
while(char!="M")
{
count += 1;
char = string_char_at(display_string,count); 
}
count += 1;
char = string_char_at(display_string,count);
}

//Potrait Change
if char == "&amp;"
{
var new_sprite = "";
var new_index = "";
while(char != "/")
{
count += 1;
char = string_char_at(display_string,count);
if char != "/" {new_sprite = string(new_sprite)+string(char);}
}
while(char != "&amp;")
{
count += 1;
char = string_char_at(display_string,count);
if char != "&amp;" {new_index = string(new_index)+string(char);}
}
new_sprite = asset_get_index(new_sprite); 
new_index = real(new_index);

portrait_index = new_sprite;
potrait_id = new_index;

if instance_exists(o_text_portrait)
{
o_text_portrait.sprite_index = new_sprite;
o_text_portrait.image_index = new_index;
o_text_portrait.current_image = new_index;
o_text_portrait.current_sprite = new_sprite;
o_text_portrait.switch_index = false;
o_text_portrait.old_alpha = 1;
o_text_portrait.image_alpha = 1;
o_text_portrait.old_sprite = new_sprite;
o_text_portrait.old_image = new_index;
}
char = "";
}

//Icon Effect
if char == "^"
{
count += 1;
icon_row = current_line;
var line_anchor;
switch(icon_row)
{
case 0: icon_x = string_width(line0) + line0x; line_anchor = string_width(line0); break;
case 1: icon_x = string_width(line1) + line1x; line_anchor = string_width(line1); break;
case 2: icon_x = string_width(line2) + line2x; line_anchor = string_width(line2); break;
case 3: icon_x = string_width(line3) + line3x; line_anchor = string_width(line3); break;
case 4: icon_x = string_width(line4) + line4x; line_anchor = string_width(line4); break;
case 5: icon_x = string_width(line5) + line5x; line_anchor = string_width(line5); break;
case 6: icon_x = string_width(line6) + line6x; line_anchor = string_width(line6); break;
case 7: icon_x = string_width(line7) + line7x; line_anchor = string_width(line7); break;
case 8: icon_x = string_width(line8) + line8x; line_anchor = string_width(line8); break;
case 9: icon_x = string_width(line9) + line9x; line_anchor = string_width(line9); break;
case 10: icon_x = string_width(line10) + line10x; line_anchor = string_width(line10); break;
case 11: icon_x = string_width(line11) + line11x; line_anchor = string_width(line11); break;
case 12: icon_x = string_width(line12) + line12x; line_anchor = string_width(line12); break;
case 13: icon_x = string_width(line13) + line13x; line_anchor = string_width(line13); break;
case 14: icon_x = string_width(line14) + line14x; line_anchor = string_width(line14); break;
case 15: icon_x = string_width(line15) + line15x; line_anchor = string_width(line15); break;
}
var activate_icon = false;
if !activate_icon &amp;&amp; !icon1draw {icon1draw = true; icon1row = icon_row; icon1x = icon_x; icon1index = real(string_char_at(display_string,count)); icon1_anchor = line_anchor; activate_icon = true;}
if !activate_icon &amp;&amp; !icon2draw {icon2draw = true; icon2row = icon_row; icon2x = icon_x; icon2index = real(string_char_at(display_string,count)); icon2_anchor = line_anchor; activate_icon = true;}
if !activate_icon &amp;&amp; !icon3draw {icon3draw = true; icon3row = icon_row; icon3x = icon_x; icon3index = real(string_char_at(display_string,count)); icon3_anchor = line_anchor; activate_icon = true;}
if !activate_icon &amp;&amp; !icon4draw {icon4draw = true; icon4row = icon_row; icon4x = icon_x; icon4index = real(string_char_at(display_string,count)); icon4_anchor = line_anchor; activate_icon = true;}
if !activate_icon &amp;&amp; !icon5draw {icon5draw = true; icon5row = icon_row; icon5x = icon_x; icon5index = real(string_char_at(display_string,count)); icon5_anchor = line_anchor; activate_icon = true;}

char = "";
var space_width = string_width(" ");
var correction_repeat = round(45/space_width);
repeat(correction_repeat)
{
char = string(char)+string(" ");
}
}

//Wait Effect
if char == "&lt;"
{
while(char != "&gt;")
{
count += 1;
char = string_char_at(display_string,count);
}
count += 1;
char = string_char_at(display_string,count);
}

//Color Effect
if char == "@"
{
col_active = true;
count += 1;
var col_id = string_char_at(display_string,count);
switch(col_id)
{
case "R": color_index = c_red; break;
case "G": color_index = c_green; break;
case "B": color_index = c_blue; break;
case "Y": color_index = c_yellow; break;
case "O": color_index = c_orange; break;
case "L": color_index = c_lime; break;
case "X": color_index = c_black; break;
case "P": color_index = c_purple; break;
case "S": color_index = c_silver; break;
case "A": color_index = c_aqua; break;
case "F": color_index = c_fuchsia; break;
case "M": color_index = c_maroon; break;
case "Q": color_index = c_dkgray; break;
case "E": color_index = c_ltgray; break;
case "W": color_index = c_white; break;
}

var activate = false;
if !activate &amp;&amp; !color1_draw 
{
color1_draw = true;color1 = true; activate = true; color1_index = color_index;
line0_col1 = line0;
line1_col1 = line1;
line2_col1 = line2;
line3_col1 = line3;
line4_col1 = line4;
line5_col1 = line5;
line6_col1 = line6;
line7_col1 = line7;
line8_col1 = line8;
line9_col1 = line9;
line10_col1 = line10;
line11_col1 = line11;
line12_col1 = line12;
line13_col1 = line13;
line14_col1 = line14;
line15_col1 = line15;
}
if !activate &amp;&amp; !color2_draw 
{
color2_draw = true;color2 = true; activate = true; color2_index = color_index;
line0_col2 = line0;
line1_col2 = line1;
line2_col2 = line2;
line3_col2 = line3;
line4_col2 = line4;
line5_col2 = line5;
line6_col2 = line6;
line7_col2 = line7;
line8_col2 = line8;
line9_col2 = line9;
line10_col2 = line10;
line11_col2 = line11;
line12_col2 = line12;
line13_col2 = line13;
line14_col2 = line14;
line15_col2 = line15;
}
if !activate &amp;&amp; !color3_draw 
{
color3_draw = true;color3 = true; activate = true; color3_index = color_index;
line0_col3 = line0;
line1_col3 = line1;
line2_col3 = line2;
line3_col3 = line3;
line4_col3 = line4;
line5_col3 = line5;
line6_col3 = line6;
line7_col3 = line7;
line8_col3 = line8;
line9_col3 = line9;
line10_col3 = line10;
line11_col3 = line11;
line12_col3 = line12;
line13_col3 = line13;
line14_col3 = line14;
line15_col3 = line15;
}
if !activate &amp;&amp; !color4_draw 
{
color4_draw = true; color4 = true; activate = true; color4_index = color_index;
line0_col4 = line0;
line1_col4 = line1;
line2_col4 = line2;
line3_col4 = line3;
line4_col4 = line4;
line5_col4 = line5;
line6_col4 = line6;
line7_col4 = line7;
line8_col4 = line8;
line9_col4 = line9;
line10_col4 = line10;
line11_col4 = line11;
line12_col4 = line12;
line13_col4 = line13;
line14_col4 = line14;
line15_col4 = line15;
}
if !activate &amp;&amp; !color5_draw 
{
color5_draw = true;color5 = true; activate = true; color5_index = color_index;
line0_col5 = line0;
line1_col5 = line1;
line2_col5 = line2;
line3_col5 = line3;
line4_col5 = line4;
line5_col5 = line5;
line6_col5 = line6;
line7_col5 = line7;
line8_col5 = line8;
line9_col5 = line9;
line10_col5 = line10;
line11_col5 = line11;
line12_col5 = line12;
line13_col5 = line13;
line14_col5 = line14;
line15_col5 = line15;
}
if !activate &amp;&amp; !color6_draw 
{
color6_draw = true;color6 = true; activate = true; color6_index = color_index;
line0_col6 = line0;
line1_col6 = line1;
line2_col6 = line2;
line3_col6 = line3;
line4_col6 = line4;
line5_col6 = line5;
line6_col6 = line6;
line7_col6 = line7;
line8_col6 = line8;
line9_col6 = line9;
line10_col6 = line10;
line11_col6 = line11;
line12_col6 = line12;
line13_col6 = line13;
line14_col6 = line14;
line15_col6 = line15;
}
color_index = c_white; // Default Index
continue;
}
//=========================================

switch(current_line)
{
case 0: 
if char != "#" {line0 = string(line0)+string(char);}
if string_width(line0) &gt; max_width &amp;&amp; char = " " &amp;&amp; !col_active || char = "#" {current_line += 1;}
break;
case 1: 
if char != "#" {line1 = string(line1)+string(char);}
if string_width(line1) &gt; max_width &amp;&amp; char = " " &amp;&amp; !col_active || char = "#" {current_line += 1;} 
break;
case 2: 
if char != "#" {line2 = string(line2)+string(char);}
if string_width(line2) &gt; max_width &amp;&amp; char = " " &amp;&amp; !col_active || char = "#" {current_line += 1;} 
break;
case 3: 
if char != "#" {line3 = string(line3)+string(char);}
if string_width(line3) &gt; max_width &amp;&amp; char = " " &amp;&amp; !col_active || char = "#" {current_line += 1;}
break;
case 4: 
if char != "#" {line4 = string(line4)+string(char);}
if string_width(line4) &gt; max_width &amp;&amp; char = " " &amp;&amp; !col_active || char = "#" {current_line += 1;}
break;
case 5: 
if char != "#" {line5 = string(line5)+string(char);}
if string_width(line5) &gt; max_width &amp;&amp; char = " " &amp;&amp; !col_active || char = "#" {current_line += 1;}
break;
case 6: 
if char != "#" {line6 = string(line6)+string(char);}
if string_width(line6) &gt; max_width &amp;&amp; char = " " &amp;&amp; !col_active || char = "#" {current_line += 1;}
break;
case 7: 
if char != "#" {line7 = string(line7)+string(char);}
if string_width(line7) &gt; max_width &amp;&amp; char = " " &amp;&amp; !col_active || char = "#" {current_line += 1;}
break;
case 8: 
if char != "#" {line8 = string(line8)+string(char);}
if string_width(line8) &gt; max_width &amp;&amp; char = " " &amp;&amp; !col_active || char = "#" {current_line += 1;}
break;
case 9: 
if char != "#" {line9 = string(line9)+string(char);}
if string_width(line9) &gt; max_width &amp;&amp; char = " " &amp;&amp; !col_active || char = "#" {current_line += 1;}
break;
case 10: 
if char != "#" {line10 = string(line10)+string(char);}
if string_width(line10) &gt; max_width &amp;&amp; char = " " &amp;&amp; !col_active || char = "#" {current_line += 1;}
break;
case 11: 
if char != "#" {line11 = string(line11)+string(char);}
if string_width(line11) &gt; max_width &amp;&amp; char = " " &amp;&amp; !col_active || char = "#" {current_line += 1;}
break;
case 12: 
if char != "#" {line12 = string(line12)+string(char);}
if string_width(line12) &gt; max_width &amp;&amp; char = " " &amp;&amp; !col_active || char = "#" {current_line += 1;}
break;
case 13: 
if char != "#" {line13 = string(line13)+string(char);}
if string_width(line13) &gt; max_width &amp;&amp; char = " " &amp;&amp; !col_active || char = "#" {current_line += 1;}
break;
case 14: 
if char != "#" {line14 = string(line14)+string(char);}
if string_width(line14) &gt; max_width &amp;&amp; char = " " &amp;&amp; !col_active || char = "#" {current_line += 1;}
break;
case 15: 
if char != "#" {line15 = string(line15)+string(char);}
if string_width(line15) &gt; max_width &amp;&amp; char = " " &amp;&amp; !col_active || char = "#" {current_line += 1;}
break;
}

//COLOR INTEGRATION
//==================================================================
if col_active
{
col_char = string_char_at(display_string,count);
col_string = string(col_string) + string(col_char); //This creates the entire colored string.
if color1
{
//Color1
switch(current_line)
{
case 0: if col_char != "#" {line0_col1 = string(line0_col1)+string(col_char);} if string_width(line0_col1) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 1: if col_char != "#" {line1_col1 = string(line1_col1)+string(col_char);} if string_width(line1_col1) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 2: if col_char != "#" {line2_col1 = string(line2_col1)+string(col_char);} if string_width(line2_col1) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 3: if col_char != "#" {line3_col1 = string(line3_col1)+string(col_char);} if string_width(line3_col1) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 4: if col_char != "#" {line4_col1 = string(line4_col1)+string(col_char);} if string_width(line4_col1) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 5: if col_char != "#" {line5_col1 = string(line5_col1)+string(col_char);} if string_width(line5_col1) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 6: if col_char != "#" {line6_col1 = string(line6_col1)+string(col_char);} if string_width(line6_col1) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 7: if col_char != "#" {line7_col1 = string(line7_col1)+string(col_char);} if string_width(line7_col1) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 8: if col_char != "#" {line8_col1 = string(line8_col1)+string(col_char);} if string_width(line8_col1) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 9: if col_char != "#" {line9_col1 = string(line9_col1)+string(col_char);} if string_width(line9_col1) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 10: if col_char != "#" {line10_col1 = string(line10_col1)+string(col_char);} if string_width(line10_col1) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 11: if col_char != "#" {line11_col1 = string(line11_col1)+string(col_char);} if string_width(line11_col1) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 12: if col_char != "#" {line12_col1 = string(line12_col1)+string(col_char);} if string_width(line12_col1) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 13: if col_char != "#" {line13_col1 = string(line13_col1)+string(col_char);} if string_width(line13_col1) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 14: if col_char != "#" {line14_col1 = string(line14_col1)+string(col_char);} if string_width(line14_col1) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 15: if col_char != "#" {line15_col1 = string(line15_col1)+string(col_char);} if string_width(line15_col1) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
}
}
if color2
{
//Color2
switch(current_line)
{
case 0: if col_char != "#" {line0_col2 = string(line0_col2)+string(col_char);} if string_width(line0_col2) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 1: if col_char != "#" {line1_col2 = string(line1_col2)+string(col_char);} if string_width(line1_col2) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 2: if col_char != "#" {line2_col2 = string(line2_col2)+string(col_char);} if string_width(line2_col2) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 3: if col_char != "#" {line3_col2 = string(line3_col2)+string(col_char);} if string_width(line3_col2) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 4: if col_char != "#" {line4_col2 = string(line4_col2)+string(col_char);} if string_width(line4_col2) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 5: if col_char != "#" {line5_col2 = string(line5_col2)+string(col_char);} if string_width(line5_col2) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 6: if col_char != "#" {line6_col2 = string(line6_col2)+string(col_char);} if string_width(line6_col2) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 7: if col_char != "#" {line7_col2 = string(line7_col2)+string(col_char);} if string_width(line7_col2) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 8: if col_char != "#" {line8_col2 = string(line8_col2)+string(col_char);} if string_width(line8_col2) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 9: if col_char != "#" {line9_col2 = string(line9_col2)+string(col_char);} if string_width(line9_col2) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 10: if col_char != "#" {line10_col2 = string(line10_col2)+string(col_char);} if string_width(line10_col2) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 11: if col_char != "#" {line11_col2 = string(line11_col2)+string(col_char);} if string_width(line11_col2) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 12: if col_char != "#" {line12_col2 = string(line12_col2)+string(col_char);} if string_width(line12_col2) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 13: if col_char != "#" {line13_col2 = string(line13_col2)+string(col_char);} if string_width(line13_col2) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 14: if col_char != "#" {line14_col2 = string(line14_col2)+string(col_char);} if string_width(line14_col2) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 15: if col_char != "#" {line15_col2 = string(line15_col2)+string(col_char);} if string_width(line15_col2) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
}
}
if color3
{
//Color3
switch(current_line)
{
case 0: if col_char != "#" {line0_col3 = string(line0_col3)+string(col_char);} if string_width(line0_col3) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 1: if col_char != "#" {line1_col3 = string(line1_col3)+string(col_char);} if string_width(line1_col3) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 2: if col_char != "#" {line2_col3 = string(line2_col3)+string(col_char);} if string_width(line2_col3) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 3: if col_char != "#" {line3_col3 = string(line3_col3)+string(col_char);} if string_width(line3_col3) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 4: if col_char != "#" {line4_col3 = string(line4_col3)+string(col_char);} if string_width(line4_col3) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 5: if col_char != "#" {line5_col3 = string(line5_col3)+string(col_char);} if string_width(line5_col3) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 6: if col_char != "#" {line6_col3 = string(line6_col3)+string(col_char);} if string_width(line6_col3) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 7: if col_char != "#" {line7_col3 = string(line7_col3)+string(col_char);} if string_width(line7_col3) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 8: if col_char != "#" {line8_col3 = string(line8_col3)+string(col_char);} if string_width(line8_col3) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 9: if col_char != "#" {line9_col3 = string(line9_col3)+string(col_char);} if string_width(line9_col3) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 10: if col_char != "#" {line10_col3 = string(line10_col3)+string(col_char);} if string_width(line10_col3) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 11: if col_char != "#" {line11_col3 = string(line11_col3)+string(col_char);} if string_width(line11_col3) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 12: if col_char != "#" {line12_col3 = string(line12_col3)+string(col_char);} if string_width(line12_col3) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 13: if col_char != "#" {line13_col3 = string(line13_col3)+string(col_char);} if string_width(line13_col3) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 14: if col_char != "#" {line14_col3 = string(line14_col3)+string(col_char);} if string_width(line14_col3) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 15: if col_char != "#" {line15_col3 = string(line15_col3)+string(col_char);} if string_width(line15_col3) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
}
}
if color4
{
//Color4
switch(current_line)
{
case 0: if col_char != "#" {line0_col4 = string(line0_col4)+string(col_char);} if string_width(line0_col4) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 1: if col_char != "#" {line1_col4 = string(line1_col4)+string(col_char);} if string_width(line1_col4) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 2: if col_char != "#" {line2_col4 = string(line2_col4)+string(col_char);} if string_width(line2_col4) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 3: if col_char != "#" {line3_col4 = string(line3_col4)+string(col_char);} if string_width(line3_col4) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 4: if col_char != "#" {line4_col4 = string(line4_col4)+string(col_char);} if string_width(line4_col4) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 5: if col_char != "#" {line5_col4 = string(line5_col4)+string(col_char);} if string_width(line5_col4) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 6: if col_char != "#" {line6_col4 = string(line6_col4)+string(col_char);} if string_width(line6_col4) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 7: if col_char != "#" {line7_col4 = string(line7_col4)+string(col_char);} if string_width(line7_col4) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 8: if col_char != "#" {line8_col4 = string(line8_col4)+string(col_char);} if string_width(line8_col4) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 9: if col_char != "#" {line9_col4 = string(line9_col4)+string(col_char);} if string_width(line9_col4) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 10: if col_char != "#" {line10_col4 = string(line10_col4)+string(col_char);} if string_width(line10_col4) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 11: if col_char != "#" {line11_col4 = string(line11_col4)+string(col_char);} if string_width(line11_col4) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 12: if col_char != "#" {line12_col4 = string(line12_col4)+string(col_char);} if string_width(line12_col4) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 13: if col_char != "#" {line13_col4 = string(line13_col4)+string(col_char);} if string_width(line13_col4) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 14: if col_char != "#" {line14_col4 = string(line14_col4)+string(col_char);} if string_width(line14_col4) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 15: if col_char != "#" {line15_col4 = string(line15_col4)+string(col_char);} if string_width(line15_col4) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
}
}
if color5
{
//Color5
switch(current_line)
{
case 0: if col_char != "#" {line0_col5 = string(line0_col5)+string(col_char);} if string_width(line0_col5) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 1: if col_char != "#" {line1_col5 = string(line1_col5)+string(col_char);} if string_width(line1_col5) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 2: if col_char != "#" {line2_col5 = string(line2_col5)+string(col_char);} if string_width(line2_col5) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 3: if col_char != "#" {line3_col5 = string(line3_col5)+string(col_char);} if string_width(line3_col5) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 4: if col_char != "#" {line4_col5 = string(line4_col5)+string(col_char);} if string_width(line4_col5) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 5: if col_char != "#" {line5_col5 = string(line5_col5)+string(col_char);} if string_width(line5_col5) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 6: if col_char != "#" {line6_col5 = string(line6_col5)+string(col_char);} if string_width(line6_col5) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 7: if col_char != "#" {line7_col5 = string(line7_col5)+string(col_char);} if string_width(line7_col5) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 8: if col_char != "#" {line8_col5 = string(line8_col5)+string(col_char);} if string_width(line8_col5) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 9: if col_char != "#" {line9_col5 = string(line9_col5)+string(col_char);} if string_width(line9_col5) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 10: if col_char != "#" {line10_col5 = string(line10_col5)+string(col_char);} if string_width(line10_col5) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 11: if col_char != "#" {line11_col5 = string(line11_col5)+string(col_char);} if string_width(line11_col5) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 12: if col_char != "#" {line12_col5 = string(line12_col5)+string(col_char);} if string_width(line12_col5) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 13: if col_char != "#" {line13_col5 = string(line13_col5)+string(col_char);} if string_width(line13_col5) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 14: if col_char != "#" {line14_col5 = string(line14_col5)+string(col_char);} if string_width(line14_col5) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 15: if col_char != "#" {line15_col5 = string(line15_col5)+string(col_char);} if string_width(line15_col5) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
}
}
if color6
{
//Color6
switch(current_line)
{
case 0: if col_char != "#" {line0_col6 = string(line0_col6)+string(col_char);} if string_width(line0_col6) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 1: if col_char != "#" {line1_col6 = string(line1_col6)+string(col_char);} if string_width(line1_col6) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 2: if col_char != "#" {line2_col6 = string(line2_col6)+string(col_char);} if string_width(line2_col6) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 3: if col_char != "#" {line3_col6 = string(line3_col6)+string(col_char);} if string_width(line3_col6) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 4: if col_char != "#" {line4_col6 = string(line4_col6)+string(col_char);} if string_width(line4_col6) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 5: if col_char != "#" {line5_col6 = string(line5_col6)+string(col_char);} if string_width(line5_col6) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 6: if col_char != "#" {line6_col6 = string(line6_col6)+string(col_char);} if string_width(line6_col6) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 7: if col_char != "#" {line7_col6 = string(line7_col6)+string(col_char);} if string_width(line7_col6) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 8: if col_char != "#" {line8_col6 = string(line8_col6)+string(col_char);} if string_width(line8_col6) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 9: if col_char != "#" {line9_col6 = string(line9_col6)+string(col_char);} if string_width(line9_col6) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 10: if col_char != "#" {line10_col6 = string(line10_col6)+string(col_char);} if string_width(line10_col6) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 11: if col_char != "#" {line11_col6 = string(line11_col6)+string(col_char);} if string_width(line11_col6) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 12: if col_char != "#" {line12_col6 = string(line12_col6)+string(col_char);} if string_width(line12_col6) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 13: if col_char != "#" {line13_col6 = string(line13_col6)+string(col_char);} if string_width(line13_col6) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 14: if col_char != "#" {line14_col6 = string(line14_col6)+string(col_char);} if string_width(line14_col6) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
case 15: if col_char != "#" {line15_col6 = string(line15_col6)+string(col_char);} if string_width(line15_col6) &gt; max_width &amp;&amp; col_char = " " ||col_char = "#" {current_line += 1;} break;
}
}
}
//==================================================================
}
//While End
final = true;
}//Skip End
//While Skip End


//portraits
if sprite_exists(portrait_index) &amp;&amp; instance_exists(o_text_box) &amp;&amp; portrait_index != ""
{
if !instance_exists(o_text_portrait)
{
instance_create(o_text_box.x-1,o_text_box.y,o_text_portrait);
o_text_portrait.sprite_index = portrait_index;
    o_text_portrait.image_index = portrait_id;
}
}
if portrait_index = "" &amp;&amp; instance_exists(o_text_portrait)
{
o_text_portrait.destroy = true;
}
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Editing beyond here is not recommended without good understanding of the contained code.
if !FINAL_ACTIVE || restartEngine {exit;}
if draw
{	
	if instance_exists(o_text_box)
	{
		if o_text_box.type = "Statement" {draw_set_halign(fa_center);}
		else {draw_set_halign(fa_left);}
	}
	
	var gap = 26;
	//color6
	if color6 {color6_draw = true;}
	if color6_draw
	{
		draw_set_color(color6_index);
		draw_text(line0x,box_y+0*gap,line0_col6);
		draw_text(line1x,box_y+1*gap,line1_col6); 
		draw_text(line2x,box_y+2*gap,line2_col6);
		draw_text(line3x,box_y+3*gap,line3_col6);
		draw_text(line4x,box_y+4*gap,line4_col6);
		draw_text(line5x,box_y+5*gap,line5_col6);
		draw_text(line6x,box_y+6*gap,line6_col6);
		draw_text(line7x,box_y+7*gap,line7_col6);
		draw_text(line8x,box_y+8*gap,line8_col6);
		draw_text(line9x,box_y+9*gap,line9_col6);
		draw_text(line10x,box_y+10*gap,line10_col6);
		draw_text(line11x,box_y+11*gap,line11_col6);
		draw_text(line12x,box_y+12*gap,line12_col6);
		draw_text(line13x,box_y+13*gap,line13_col6);
		draw_text(line14x,box_y+14*gap,line14_col6);
		draw_text(line15x,box_y+15*gap,line15_col6);
	}
	//color5
	if color5 {color5_draw = true;}
	if color5_draw
	{
		draw_set_color(color5_index);
		draw_text(line0x,box_y+0*gap,line0_col5);
		draw_text(line1x,box_y+1*gap,line1_col5); 
		draw_text(line2x,box_y+2*gap,line2_col5);
		draw_text(line3x,box_y+3*gap,line3_col5);
		draw_text(line4x,box_y+4*gap,line4_col5);
		draw_text(line5x,box_y+5*gap,line5_col5);
		draw_text(line6x,box_y+6*gap,line6_col5);
		draw_text(line7x,box_y+7*gap,line7_col5);
		draw_text(line8x,box_y+8*gap,line8_col5);
		draw_text(line9x,box_y+9*gap,line9_col5);
		draw_text(line10x,box_y+10*gap,line10_col5);
		draw_text(line11x,box_y+11*gap,line11_col5);
		draw_text(line12x,box_y+12*gap,line12_col5);
		draw_text(line13x,box_y+13*gap,line13_col5);
		draw_text(line14x,box_y+14*gap,line14_col5);
		draw_text(line15x,box_y+15*gap,line15_col5);
	}
	//color4
	if color4 {color4_draw = true;}
	if color4_draw
	{
		draw_set_color(color4_index);
		draw_text(line0x,box_y+0*gap,line0_col4);
		draw_text(line1x,box_y+1*gap,line1_col4); 
		draw_text(line2x,box_y+2*gap,line2_col4);
		draw_text(line3x,box_y+3*gap,line3_col4);
		draw_text(line4x,box_y+4*gap,line4_col4);
		draw_text(line5x,box_y+5*gap,line5_col4);
		draw_text(line6x,box_y+6*gap,line6_col4);
		draw_text(line7x,box_y+7*gap,line7_col4);
		draw_text(line8x,box_y+8*gap,line8_col4);
		draw_text(line9x,box_y+9*gap,line9_col4);
		draw_text(line10x,box_y+10*gap,line10_col4);
		draw_text(line11x,box_y+11*gap,line11_col4);
		draw_text(line12x,box_y+12*gap,line12_col4);
		draw_text(line13x,box_y+13*gap,line13_col4);
		draw_text(line14x,box_y+14*gap,line14_col4);
		draw_text(line15x,box_y+15*gap,line15_col4);
	}
	//color3
	if color3 {color3_draw = true;}
	if color3_draw
	{
		draw_set_color(color3_index);
		draw_text(line0x,box_y+0*gap,line0_col3);
		draw_text(line1x,box_y+1*gap,line1_col3); 
		draw_text(line2x,box_y+2*gap,line2_col3);
		draw_text(line3x,box_y+3*gap,line3_col3);
		draw_text(line4x,box_y+4*gap,line4_col3);
		draw_text(line5x,box_y+5*gap,line5_col3);
		draw_text(line6x,box_y+6*gap,line6_col3);
		draw_text(line7x,box_y+7*gap,line7_col3);
		draw_text(line8x,box_y+8*gap,line8_col3);
		draw_text(line9x,box_y+9*gap,line9_col3);
		draw_text(line10x,box_y+10*gap,line10_col3);
		draw_text(line11x,box_y+11*gap,line11_col3);
		draw_text(line12x,box_y+12*gap,line12_col3);
		draw_text(line13x,box_y+13*gap,line13_col3);
		draw_text(line14x,box_y+14*gap,line14_col3);
		draw_text(line15x,box_y+15*gap,line15_col3);
	}
	//color2
	if color2 {color2_draw = true;}
	if color2_draw
	{
		draw_set_color(color2_index);
		draw_text(line0x,box_y+0*gap,line0_col2);
		draw_text(line1x,box_y+1*gap,line1_col2);
		draw_text(line2x,box_y+2*gap,line2_col2);
		draw_text(line3x,box_y+3*gap,line3_col2);
		draw_text(line4x,box_y+4*gap,line4_col2);
		draw_text(line5x,box_y+5*gap,line5_col2);
		draw_text(line6x,box_y+6*gap,line6_col2);
		draw_text(line7x,box_y+7*gap,line7_col2);
		draw_text(line8x,box_y+8*gap,line8_col2);
		draw_text(line9x,box_y+9*gap,line9_col2);
		draw_text(line10x,box_y+10*gap,line10_col2);
		draw_text(line11x,box_y+11*gap,line11_col2);
		draw_text(line12x,box_y+12*gap,line12_col2);
		draw_text(line13x,box_y+13*gap,line13_col2);
		draw_text(line14x,box_y+14*gap,line14_col2);
		draw_text(line15x,box_y+15*gap,line15_col2);
	}
	//color1
	if color1 {color1_draw = true;}
	if color1_draw
	{
		draw_set_color(color1_index);
		draw_text(line0x,box_y+0*gap,line0_col1);
		draw_text(line1x,box_y+1*gap,line1_col1); 
		draw_text(line2x,box_y+2*gap,line2_col1);
		draw_text(line3x,box_y+3*gap,line3_col1);
		draw_text(line4x,box_y+4*gap,line4_col1);
		draw_text(line5x,box_y+5*gap,line5_col1);
		draw_text(line6x,box_y+6*gap,line6_col1);
		draw_text(line7x,box_y+7*gap,line7_col1);
		draw_text(line8x,box_y+8*gap,line8_col1);
		draw_text(line9x,box_y+9*gap,line9_col1);
		draw_text(line10x,box_y+10*gap,line10_col1);
		draw_text(line11x,box_y+11*gap,line11_col1);
		draw_text(line12x,box_y+12*gap,line12_col1);
		draw_text(line13x,box_y+13*gap,line13_col1);
		draw_text(line14x,box_y+14*gap,line14_col1);
		draw_text(line15x,box_y+15*gap,line15_col1);
	}
	
	//draw lines
	draw_set_color(c_white);
	draw_text(line0x,box_y+0*gap,line0);
	draw_text(line1x,box_y+1*gap,line1);
	draw_text(line2x,box_y+2*gap,line2);
	draw_text(line3x,box_y+3*gap,line3);
	draw_text(line4x,box_y+4*gap,line4);
	draw_text(line5x,box_y+5*gap,line5);
	draw_text(line6x,box_y+6*gap,line6);
	draw_text(line7x,box_y+7*gap,line7);
	draw_text(line8x,box_y+8*gap,line8);
	draw_text(line9x,box_y+9*gap,line9);
	draw_text(line10x,box_y+10*gap,line10);
	draw_text(line11x,box_y+11*gap,line11);
	draw_text(line12x,box_y+12*gap,line12);
	draw_text(line13x,box_y+13*gap,line13);
	draw_text(line14x,box_y+14*gap,line14);
	draw_text(line15x,box_y+15*gap,line15);
	
	// Icon1
	if icon1draw
	{
		var change_x;
		icon1y = box_y+27*icon1row-7;
		switch(icon1row)
		{
			case 0:icon1x = icon1_anchor+line0x;break;case 1:icon1x = icon1_anchor+line1x;break;
			case 2:icon1x = icon1_anchor+line2x;break;case 3:icon1x = icon1_anchor+line3x;break;
			case 4:icon1x = icon1_anchor+line4x;break;case 5:icon1x = icon1_anchor+line5x;break;
			case 6:icon1x = icon1_anchor+line6x;break;case 7:icon1x = icon1_anchor+line7x;break;
			case 8:icon1x = icon1_anchor+line8x;break;case 9:icon1x = icon1_anchor+line9x;break;
			case 10:icon1x = icon1_anchor+line10x;break;case 11:icon1x = icon1_anchor+line11x;break;
			case 12:icon1x = icon1_anchor+line12x;break;case 13:icon1x = icon1_anchor+line13x;break;
			case 14:icon1x = icon1_anchor+line14x;break;case 15:icon1x = icon1_anchor+line15x;break;
		}
		draw_sprite(s_text_icon,icon1index,icon1x+9,icon1y);
	}
	// Icon2
	if icon2draw
	{
		var change_x;
		icon2y = box_y+27*icon2row-7;
		switch(icon2row)
		{
			case 0:icon2x = icon2_anchor+line0x;break;case 1:icon2x = icon2_anchor+line1x;break;
			case 2:icon2x = icon2_anchor+line2x;break;case 3:icon2x = icon2_anchor+line3x;break;
			case 4:icon2x = icon2_anchor+line4x;break;case 5:icon2x = icon2_anchor+line5x;break;
			case 6:icon2x = icon2_anchor+line6x;break;case 7:icon2x = icon2_anchor+line7x;break;
			case 8:icon2x = icon2_anchor+line8x;break;case 9:icon2x = icon2_anchor+line9x;break;
			case 10:icon2x = icon2_anchor+line10x;break;case 11:icon2x = icon2_anchor+line11x;break;
			case 12:icon2x = icon2_anchor+line12x;break;case 13:icon2x = icon2_anchor+line13x;break;
			case 14:icon2x = icon2_anchor+line14x;break;case 15:icon2x = icon2_anchor+line15x;break;
		}
		draw_sprite(s_text_icon,icon2index,icon2x+9,icon2y);
	}
	// Icon3
	if icon3draw
	{
		var change_x;
		icon3y = box_y+27*icon3row-7;
		switch(icon3row)
		{
			case 0:icon3x = icon3_anchor+line0x;break;case 1:icon3x = icon3_anchor+line1x;break;
			case 2:icon3x = icon3_anchor+line2x;break;case 3:icon3x = icon3_anchor+line3x;break;
			case 4:icon3x = icon3_anchor+line4x;break;case 5:icon3x = icon3_anchor+line5x;break;
			case 6:icon3x = icon3_anchor+line6x;break;case 7:icon3x = icon3_anchor+line7x;break;
			case 8:icon3x = icon3_anchor+line8x;break;case 9:icon3x = icon3_anchor+line9x;break;
			case 10:icon3x = icon3_anchor+line10x;break;case 11:icon3x = icon3_anchor+line11x;break;
			case 12:icon3x = icon3_anchor+line12x;break;case 13:icon3x = icon3_anchor+line13x;break;
			case 14:icon3x = icon3_anchor+line14x;break;case 15:icon3x = icon3_anchor+line15x;break;
		}
		draw_sprite(s_text_icon,icon3index,icon3x+9,icon3y);
	}
	// Icon4
	if icon4draw
	{
		var change_x;
		icon4y = box_y+27*icon4row-7;
		switch(icon4row)
		{
			case 0:icon4x = icon4_anchor+line0x;break;case 1:icon4x = icon4_anchor+line1x;break;
			case 2:icon4x = icon4_anchor+line2x;break;case 3:icon4x = icon4_anchor+line3x;break;
			case 4:icon4x = icon4_anchor+line4x;break;case 5:icon4x = icon4_anchor+line5x;break;
			case 6:icon4x = icon4_anchor+line6x;break;case 7:icon4x = icon4_anchor+line7x;break;
			case 8:icon4x = icon4_anchor+line8x;break;case 9:icon4x = icon4_anchor+line9x;break;
			case 10:icon4x = icon4_anchor+line10x;break;case 11:icon4x = icon4_anchor+line11x;break;
			case 12:icon4x = icon4_anchor+line12x;break;case 13:icon4x = icon4_anchor+line13x;break;
			case 14:icon4x = icon4_anchor+line14x;break;case 15:icon4x = icon4_anchor+line15x;break;
		}
		draw_sprite(s_text_icon,icon4index,icon4x+9,icon4y);
	}
	// Icon5
	if icon5draw
	{
		var change_x;
		icon5y = box_y+27*icon5row-7;
		switch(icon5row)
		{
			case 0:icon5x = icon5_anchor+line0x;break;case 1:icon5x = icon5_anchor+line1x;break;
			case 2:icon5x = icon5_anchor+line2x;break;case 3:icon5x = icon5_anchor+line3x;break;
			case 4:icon5x = icon5_anchor+line4x;break;case 5:icon5x = icon5_anchor+line5x;break;
			case 6:icon5x = icon5_anchor+line6x;break;case 7:icon5x = icon5_anchor+line7x;break;
			case 8:icon5x = icon5_anchor+line8x;break;case 9:icon5x = icon5_anchor+line9x;break;
			case 10:icon5x = icon5_anchor+line10x;break;case 11:icon5x = icon5_anchor+line11x;break;
			case 12:icon5x = icon5_anchor+line12x;break;case 13:icon5x = icon5_anchor+line13x;break;
			case 14:icon5x = icon5_anchor+line14x;break;case 15:icon5x = icon5_anchor+line15x;break;
		}
		draw_sprite(s_text_icon,icon5index,icon5x+9,icon5y);
	}
	
	
	//Text box bobbing arrow
	if display_string != "" &amp;&amp; current_count &lt; message_count &amp;&amp; final &amp;&amp; instance_exists(o_text_box)
	{
		arrow = true;
		arrow_initial_y = o_text_box.y+o_text_box.sprite_height-4;
	}
	else {arrow = false; arrow_y = 0;}
	
	if arrow
	{
		draw_sprite(s_text_arrow,0,o_text_box.x+o_text_box.sprite_width/2,arrow_initial_y+arrow_draw_y+8);
		if arrow_flow = 0
		{
			arrow_alarm += 1;
			if arrow_alarm = 2
			{
				arrow_alarm = 0;
				arrow_draw_y-= 1;
			}
			if arrow_draw_y = -8 {arrow_flow = 1;}
		}
		if arrow_flow = 1
		{
			arrow_alarm += 1;
			if arrow_alarm = 2
			{
				arrow_alarm = 0;
				arrow_draw_y+= 1;
			}
			if arrow_draw_y = 8 {arrow_flow = 0;}
		}
	}
	
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
