<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_room_level</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Send docked event
scr_ev_docked();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the map
scr_build_room_custom();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Some additional variables
populated = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Populate the cantina
if(populated == true) exit;
populated = true;

location_index = global.landed_on;
location_type = global.landed_type;
/**
if(debug_mode){
    location_index = 1;
    location_type = "station";
}
**/
var npc_index = noone;

if(location_type=="station"){
    location = global.stations[location_index];
    npc_index = STATION_NPCS;
}else if(location_type=="planet"){
    location = global.planets[location_index];
    npc_index = PLANET_NPCS;
}else if(location_type=="moon"){
    location = global.moons[location_index];
    npc_index = MOON_NPCS;
}



npcs = location[npc_index];

// Place NPCs at sentient positions.
var s_count = instance_number(obj_sentient);
var last_id = noone;
for(var i = 0; i &lt; s_count; i++) {

    var sentient = instance_find(obj_sentient,i);
    if(i &lt; array_length_1d(npcs)){
            var npc = global.npcs[npcs[i]];
            if(scr_npc_in_crew(npcs[i]) || !npc[NPC_ACTIVE]) continue;// Don't instantiate if this one is already in the crew OR is dead
            sentient.active = 1;//Set to active so the placeholder object won't delete itself. See obj_sentient.
            
            sentient.npc_data = npc;
            with(sentient){
                scr_npc_map_to_object();
            }

            if(npc[NPC_RACE_INDEX]!=5){
                // I like Pudnings to move
                sentient.image_speed = 0;
            }           
            
            // Repopulate a saved mission. TODO: Do we really need this?
            if(npc[NPC_MISSION]==noone){
                var mission = choose(scr_deliver_inventory(npcs[i]),scr_mission_killxofy(npcs[i]),scr_passenger(npcs[i]));
                
                sentient.mission=mission;
                //npc[NPC_MISSION]=mission;
                //global.npcs[npcs[i]]=npc;
            }else{
                sentient.mission=npc[NPC_MISSION];
            }

    }
        
}


/// Fill in the B-listers
for(var i = 0; i &lt; s_count; i++) {

    var sentient = instance_find(obj_sentient,i);
    
    if(sentient.name==noone){
        sentient.active = 0;
        /*****
        sentient.active = 1;//Set to active so the placeholder object won't delete itself. See obj_sentient.
        //scr_make_npc("planet" + "," + string(planet_index) + "," + string(row) + "," + string(col));
        var npc = scr_make_npc(global.landed_type + string(global.landed_on) + "," + string(global.current_sector_row) + "," + string(global.current_sector_col));
        var raceIndex = npc[NPC_RACE_INDEX];
        sentient.sprite_index=global.races[raceIndex, RACE_SPR];
        sentient.name = npc[NPC_NAME];
        sentient.image_speed = 0;
        sentient.race_index = raceIndex;
        ****/
    }
        
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Debark
room_goto(rm_space);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
