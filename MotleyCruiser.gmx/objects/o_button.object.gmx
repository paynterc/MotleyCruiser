<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_button1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-200</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
button_number = 0;
conditional1 = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(button_number)
{
	case 1: image_index = 0; break;
	case 2: image_index = 2; break;
	case 3: image_index = 4; break;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if mouse_check_button_pressed(mb_left) &amp;&amp; instance_position(mouse_x,mouse_y,id)
{
    alarm[0] = 5;
    //audio_play_sound(snd_next_text,2,false);
    //&amp;s_face/2&amp; (set portrait sprite and index)
    switch(button_number)
    {
        case 1: image_index = 1;
            var str = "This @Otext system@ will fit @Lany@ text box and position!&lt;140&gt; Texts are drawn cha@Bracter by c@haracter, however can be quick-displayed with the stroke of a key.&lt;220&gt; Here is an icon: ^0&lt;150&gt; Multiple pages (@L10@) of text can be displayed within 1 message for prolonged dialogues.";
            var str2 = "This is page 2 of 10.&lt;60&gt; As you've seen, time can be controlled as well...&lt;30&gt; For instance,&lt;60&gt; creating pauses within texts...&lt;100&gt; like so.&lt;140&gt; How about a mid-string portrait change?&lt;80&gt; &amp;s_face/0&amp;&lt;100&gt;#@QHi, I'm Jessica...@&lt;150&gt;!!!&lt;40&gt;  &lt;100&gt; Splendid!";
            var str3 = "And this is page 3 of 10 for this message. Sound can be inserted as desired...&lt;100&gt; |snd_beep/ ~beep-click~&lt;200&gt; or for extra drama &lt;80&gt;  |snd_explo/*80/15M~@RBOOM@~&lt;150&gt;#Varying magnitudes of text-quakes can be induced...";
            var str4 = "For GM 2 users, variable insertion is possible."
            var str5 = "The newest addition to String @LBean@ is the ability to have user defined conditional choices at any time within a text to influence the game!&lt;220&gt; For example...&lt;60&gt; would you like an apple? C(1,Yes/No/EinStEin/Juicy) Yes, it is juicy!&lt;100&gt; Conditional options have countless applications!&lt;60&gt; They can simply decide how a dialogue flows, or have a larger impact on the fate of a game!"
            conditional1 = 0;
            scr_text(str,"Speech",50,50,spr_androne,1,str2,str3,str4,str5,"","","","",self); 
            break;
        case 2: image_index = 3;
            var str = "(This is a statement-like text)...!!";
            scr_text(str,"Statement",50,50,"","","","","","","","","","",""); 
            break;
        case 3: image_index = 5;
            var str = "This text demonstrates con@Mtroll@ed form, @Pcolor@, and spacing.#The recipe requires:#   -@LPotion@^0#   -@XThe Eye of Hoon@^1#   -@BForest Essence@#   -@YSilver Ingot(8@)";
            var str2 = "   @L-Gold Powder@#   -@YShiny Stone@"
            var str3 = "This system is very easy to use.&lt;60&gt; Text can be moved at will, like this...&lt;100&gt; ()/-200,1/ &lt;240&gt; or instantly...&lt;40&gt; ()/200,10/&lt;100&gt;A text can be created with 1 script call. Once the script is called, and the input strings are prepared to deliver the desired effect, the system will interpret the input(s)!"
            scr_text(str,"Story",50,50,"","",str2,str3,"","","","","","",""); 
            break;
    }
}
if(conditional1==1){
    conditional1=0;// Be careful here. you could end up creating text objects over and over every frame. Luckily, they destroy any other existing textobject first.
    scr_text("Ok, apples it is","Speech",50,50,s_face,1,"","","","","","","","","");
}else if(conditional1==2){
    conditional1=0;
    scr_text("Fuck apples","Speech",50,50,s_face,1,"","","","","","","","","");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
