<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ItemIcon_LavaIronBucket</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init
inv_id = noone;// Inventory id
inv_amount = noone; // Amount of inventory to grant
credits = noone; // Credits to grant
commodity_id = noone;// Commodities like water and fuel go in the cargo hold

sprite_default = spr_ItemIcon_CrystalGoldStone;
sprite = sprite_default; //default
sprite_index = sprite;
image_speed = 0.025;
sprite_set = false;

r = random(400);// used for the float animation in Draw
//time = 60;
cooldown = false;// Cooldown if user fails pickup
cooldownT = 3;// Cooldown time


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Unset cooldown
cooldown = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set sprite
if(!sprite_set){
    sprite_set = true;
    if (inv_id != noone ){
       sprite = item_id_read(inv_id,2);
       sprite_index = sprite
    }else if(commodity_id!=noone){
        sprite = scr_commodity_lib_read(commodity_id,2);
        sprite_index = sprite
    }else{
        sprite = sprite_default;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// LOOOT!
if(cooldown){
    exit;
}
if(credits!=noone){

    global.credits += credits;
    audio_play_sound(snd_pickup_credit,2,0);
    var floaty = instance_create(x,y,obj_floaty);
    floaty.myText = "+" + string(credits);
    floaty.myColor = c_yellow;
    with(floaty){
        event_user(0);
    }
    instance_destroy();
    
}else if(inv_id != noone){

    if(inv_id == 42)
    {
        scr_hotbar_update("heal",1);
    }
    else if(inv_id == 53)
    {
        scr_hotbar_update("grenade",1);
    }
    else
    {
        inventory_item_add(inv_id,inv_amount);
    }
      
    audio_play_sound(snd_pickup,2,0);

    
}else if(commodity_id!=noone){
    
    var rem = scr_cargo_add(commodity_id, inv_amount);
    if(rem&lt;1){
        audio_play_sound(snd_pickup,2,0);
        
        var cargoName = scr_commodity_lib_read(commodity_id,0);
        var barkTxt = string(inv_amount) + " units of " + string(cargoName) + " picked up!";     
        scr_crew_bark(barkTxt);

        
    }else if(rem&lt;inv_amount){
        audio_play_sound(snd_pickup,2,0);
        cooldown = true;
        alarm[0]=cooldownT * room_speed;
        scr_play_sound(snd_pickup);
        var barkTxt = "Our cargo hold is full! We can't carry any more.";
        scr_crew_bark(barkTxt);
    }else{
        audio_play_sound(snd_fail,2,0);
        cooldown = true;
        alarm[0]=cooldownT * room_speed;
    }

}else{
    // Do nothing
}
        instance_destroy();


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var yy;
yy = sin((current_time-r)/200)*2;

if(sprite!=noone){
    draw_shadow(x,y-2,0.25,sprite,yy);
    draw_sprite(sprite,image_index,x-sprite_get_width(sprite)/2,y-sprite_get_height(sprite)/2+yy);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
