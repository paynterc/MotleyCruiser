<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init
depth=1000;
savesprite=false;

genders = noone;
genders[0]=spr_human;
genders[1]=spr_human_fml;
accessories = global.accessories[0];
tops = scr_array_onenull( accessories[0] );
hairs = scr_array_onenull( accessories[1] );
hats = scr_array_onenull( accessories[2] );
eyes = scr_array_onenull( accessories[3] );
haircolors = global.haircolors[0];// 0 is the index for human race selections.
colors_skin = global.skincolors[0];


selections=noone;//Hold selections here
selections[0] = 0; // Index for skin color selection
selections[1] = 0; // Index for hair sprite. 
selections[2] = 0; // Index for HAIRCOLOR.
selections[3] = 0; // Index for TOP sprite.
selections[4] = 0; // Index for HAT sprite.
selections[5] = 0; // Index for EYES sprite.
selections[6] = 0; // Index for GENDER sprite.

// Instantiate UI
margin = 8;
y_model = room_height/4; // y coord for model
y_ui = y_model + (room_height/8); // ycoord for ui

var xx = room_width/2 - 160
var yy = y_ui;
var rowspace = 6;
var rowheight = 24;



name_field = instance_create(xx,yy,obj_form_textbox);
yy+=rowheight+rowspace;
scr_make_selector(xx,yy,"SKIN COLOR",0);
yy+=rowheight+rowspace;
scr_make_selector(xx,yy,"HAIR",1);
yy+=rowheight+rowspace;
scr_make_selector(xx,yy,"HAIR COLOR",2);


yy=y_ui;
xx+=72+64+32;
scr_make_selector(xx,yy,"TOP",3);
yy+=rowheight+rowspace;
scr_make_selector(xx,yy,"HELM",4);
yy+=rowheight+rowspace;
scr_make_selector(xx,yy,"EYES",5);
yy+=rowheight+rowspace;
scr_make_selector(xx,yy,"BODY",6);


cont_button = instance_create(xx+72+32+16,y_model - 24,obj_exit_button);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Save selections, next room
// body, skin color, hair, hair color, chest, hat, eyes

if(name_field.txt != ''){
    global.player_model = selections;
    scr_new_game();
    scr_game_save();
    savesprite = true;// Build sprite in the draw step.
}else{
    scr_display_message_simple("What about a name?");
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Close GUI panels
//scr_gui_close_all();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw selections. Order is important
draw_panel(spr_background, 2, (room_width/2)-16, (room_height/4) - 24, 32, 40, 16);




// Skin
if(selections[0]&gt;=array_length_1d(colors_skin)){
    selections[0] = 0;
}else if(selections[0]&lt;0){
    selections[0] = array_length_1d(colors_skin) -1;
}

// Gender
if(selections[6]&gt;=array_length_1d(genders)){
    selections[6] = 0;
}else if(selections[6]&lt;0){
    selections[6] = array_length_1d(genders) -1;
}

draw_sprite_ext(genders[ selections[6] ],0,room_width/2,y_model, 1, 1, 0,colors_skin[ selections[0] ],1);


// Hair
if(selections[1]&gt;=array_length_1d(hairs)){
    selections[1] = 0;
}else if(selections[1]&lt;0){
    selections[1] = array_length_1d(hairs) -1;
}

if(selections[2]&gt;=array_length_1d(haircolors)){
    selections[2] = 0;
}else if(selections[2]&lt;0){
    selections[2] = array_length_1d(haircolors) -1;
}
if(hairs[ selections[1] ]!= noone){
    draw_sprite_ext(hairs[ selections[1] ],0,room_width/2,y_model, 1, 1, 0,haircolors[selections[2]],1);
}

// Top
if(selections[3]&gt;=array_length_1d(tops)){
    selections[3] = 0;
}else if(selections[3]&lt;0){
    selections[3] = array_length_1d(tops) -1;
}
scr_draw_selection(tops,selections[3]);

// EYES
if(selections[5]&gt;=array_length_1d(eyes)){
    selections[5] = 0;
}else if(selections[5]&lt;0){
    selections[5] = array_length_1d(eyes) -1;
}
scr_draw_selection(eyes,selections[5]);

// HAT
if(selections[4]&gt;=array_length_1d(hats)){
    selections[4] = 0;
}else if(selections[4]&lt;0){
    selections[4] = array_length_1d(hats) -1;
}
scr_draw_selection(hats,selections[4]);

if(savesprite){
    savesprite=false;
    var spr = scr_make_player_sprite();
    var filename=scr_get_player_sprite_filename();
    sprite_save_strip(spr, filename);
    global.player_sprite = spr;
    room_goto(rm_intro);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
