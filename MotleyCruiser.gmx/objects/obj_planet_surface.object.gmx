<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set Planet and Room

var plant1;
var bug;

if(global.planet_seed==noone){
    // Initialize room map
    randomize();
    global.planet_seed = random_get_seed();

    global.planet_room_index = 0;
 

    global.planet_map = noone;
    global.planet_map[0,0] = noone;
    global.planet_map[0,1] = noone;
    global.planet_map[0,2] = noone;
    global.planet_map[0,3] = noone;
    global.planet_map[0,4] = noone;
    var test = 5;
    
}else{
    random_set_seed(global.planet_seed);
    
}

if(global.planet_room_index == noone){
     global.planet_room_index = 0;
}

// Randomize at planet level
plant1 = scr_make_plant();
bug = scr_make_bug();
background_colour=  make_color_hsv(random(255), 50, random_range(50,255));
background_showcolour = true;


// Randomize at room level
var rix = global.planet_room_index;
if( global.planet_map[rix,0] != noone){
    random_set_seed(global.planet_map[global.planet_room_index,0]);
    var test = 3;
}else{
    randomize();
    global.planet_map[rix,0] = random_get_seed();
    var test = 4;
}



drawn=false;


var ip;
for(var i=0; i&lt;10; i++){
    var rx = irandom_range(room_width/4,room_width-(room_width/4));
    var ry = irandom_range(room_height/4,room_height-(room_width/4));
    ip = instance_create(rx,ry,obj_plant);
    ip.p = plant1;
    ip.depth = -ry;
}


for(var i=0; i&lt;5; i++){
    var rx = irandom_range(room_width/4,room_width-(room_width/4));
    var ry = irandom_range(room_height/4,room_height-(room_width/4));
    ip = instance_create(rx,ry,obj_bug);
    ip.p = bug;
    ip.depth = -ry;
}

var px, py;
switch(global.planet_nextdoor){

    case 1:
        px = room_width/2;
        py = 32;
        break;
        
    case 2:
        px = room_width - 32;
        py = room_height/2;
        break;
        
    case 3:
        px = room_width/2;
        py = room_height - 64;
        break;
        
    case 4:
        px = 32;
        py = room_height/2;
        break;
    default:
        px = room_width/2;
        py = room_height/2;
}


instance_create(px,py,obj_player);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player goes off screen / through door

if(instance_exists(obj_player)){
    var px = obj_player.x;
    var py = obj_player.y;
    if(px&gt;room_width)
    {
        scr_go_through_door(2);// exit right
    }
    else if(px&lt;0)
    {
        scr_go_through_door(4);// exit left
    }
    else if(py&lt;0)
    {
        scr_go_through_door(1);// exit top
    }
    else if(py&gt;room_height)
    {
        scr_go_through_door(3);// exit bottom
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
