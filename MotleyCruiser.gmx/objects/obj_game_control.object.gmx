<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init

// This object is placed in rm_init. It is persistant and enables things like game settings
global.paused = false;

// Baseline npc settings.
global.min_spd = 1; //minimum run speed for npc
global.min_hp = 10; //minimum hp for npc

global.min_station_npc = 3; //minimum npcs per station
global.max_station_npc = 10; //max npcs per station

// Basesline ship settings
global.ship_min_turn_spd=1;
global.ship_max_turn_spd=10;
global.ship_min_spd=1;
global.ship_max_spd=10;
global.ship_min_acc=0.1;
global.ship_max_acc=1;
global.ship_min_shields=0;
global.ship_max_shields=200;
global.ship_min_hull=10;
global.ship_max_hull=100;
global.ship_min_energy = 100;
global.ship_max_energy = 1000;
global.ship_min_weapon_spd = 3;
global.ship_max_weapon_spd = 0.1;
global.radar_range=500;
global.box_height = 100;
global.sector_width = 10000;//width in pixels of space combat room

/****************************************************************/
/*                      MENUS                                   */
/****************************************************************/
scr_pause_menu();


/****************************************************************/
/*                      ROOM LEVELS                             */
/****************************************************************/
scr_reset_room_random();

/****************************************************************/
/*                      SPACE LEVELS                            */
/****************************************************************/
global.ship_boarded = noone; // Should be an array of ship data from scr_make_ship;


/****************************************************************/
/*                      LIBRARIES                               */
/****************************************************************/

// RACES
global.races = scr_races();

//Ships
scr_ships();

// Ship Modules
scr_modules();

//Scaffolds
global.scaffolds = scr_scaffolds();

//Ship Guns
scr_guns();

//Ship Turrets
scr_ship_turrets();


/****************************************************************/
/*                      DYNAMIC PLAYER DATA                     */
/****************************************************************/

// PLAYER MISSIONS: An array of ds_maps for missions
global.mission_id = date_current_datetime(); //A number to start mission ids with. Increment this with each mission granted.
global.missions = noone;

global.objective_inc = date_current_datetime();//start increment for objective ids

// PLAYER CREW: An array of arrays for crew. Maybe a dsmap or dslist.
global.crew = noone;

// PLAYER SHIP: An array containing current ship state.
global.player_ship = noone;

// PLAYER FLEET: An array of ships in the fleet and their current state.
global.fleet = noone;

// Money
global.credits = 1000;

/****************************************************************/
/*                      GALAXY VARS                             */
/****************************************************************/
/*****
global.game_loaded = "GAME3";
random_set_seed(1);
global.galaxy_seed = random_get_seed();//Random seed for the galaxy
global.galaxy_width = 20;
global.suns[0] = -1;
global.planets[0] = -1;
global.moons[0] = -1;
global.stations[0] = -1;
global.ships[0] = -1;
global.npcs[0] = -1;
global.galaxy = scr_make_galaxy_NEW();
*****/
global.game_loaded = noone;
global.galaxy_seed = noone;
global.galaxy_width = 20;
global.suns[0] = -1;
global.planets[0] = -1;
global.moons[0] = -1;
global.stations[0] = -1;
global.ships[0] = -1;
global.npcs[0] = -1;



/****************************************************************/
/*                      LOCATION                                */
/****************************************************************/
// Maybe overwrite these when loading a game.
global.landed_on = noone;
global.landed_type = noone;
global.current_sector_row = global.galaxy_width/2;
global.current_sector_col = global.galaxy_width/2;
global.player_x = noone;
global.player_y = noone;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set GUI size
//scr_resize_gui();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// User input
if(scr_user_input("pause")){   
    if(room!=rm_main_menu){
        global.paused = !global.paused;
    
        /// Show/hide the paused game menu
    
        panel_pause[4] = global.paused;
        if(!global.paused){
            panel_load_game[4]=false;
        }
    }

}

if(scr_user_input("goto_ship_edit")){
    room_goto(rm_ship_edit);
}

if(scr_user_input("goto_space")){
    room_goto("rm_space");
}

if(scr_user_input("fullscreen")){
    if (!window_get_fullscreen()){
        window_set_fullscreen(true);

        scr_resize_gui();   
        scr_pause_menu();
        if(instance_exists(obj_main_menu)){
            with(obj_main_menu){
                scr_main_menu();
                scr_load_game_menu();//panel_load_game
                panel_main_menu[4]  = true;//Show menu
            }
        }

    }else{
       window_set_fullscreen(false);
       
       scr_resize_gui();       
       scr_pause_menu();
       if(instance_exists(obj_main_menu)){
            with(obj_main_menu){

                scr_main_menu();
                scr_load_game_menu();//panel_load_game
                panel_main_menu[4]  = true;//Show menu
            }
        }

       
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check hover status on menus
if(panel_pause[4]){
    scr_gui_button_state(panel_pause);
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(window_get_width()!=display_get_gui_width()){
    display_set_gui_size(window_get_width(), window_get_height());
           if(instance_exists(obj_main_menu)){
            with(obj_main_menu){

                scr_main_menu();
                scr_load_game_menu();//panel_load_game
                panel_main_menu[4]  = true;//Show menu
            }
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// See if gui button was pressed.
if(panel_pause[4]){
    var pause_menu_button = scr_gui_button_click(panel_pause);
    if(pause_menu_button==0){
        global.paused = false;
        panel_pause[4] = false;
    }else if(pause_menu_button==1){
        // HELP MENU
    }else if(pause_menu_button==2){
        // SETTINGS MENU
    }else if(pause_menu_button==3){
        // MAIN MENU
        global.paused = false;
        room_goto(rm_main_menu);
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Close menus
scr_pause_menu();
panel_pause[4]=false;
panel_load_game[4]=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Debug text
    
    draw_set_color(c_lime);
    draw_text(48, 32, "FPS Real: " + string(fps_real));
    draw_text(48, 64, "D WIDTH: " + string(display_get_width()));
    draw_text(48, 96, "D height: " + string(display_get_height()));
    
    draw_text(48, 128, "G WIDTH: " + string(display_get_gui_width()));
    draw_text(48, 160, "G height: " + string(display_get_gui_height()));
    
    draw_text(48, 192, "W WIDTH: " + string(window_get_width()));
    draw_text(48, 224, "W height: " + string(window_get_height()));
    
    
    
    /***
    if(instance_exists(obj_player_ship)){
        draw_text(32, 64, "Decks Remaining: " + string(global.decks_remaining));
        draw_text(32, 96, "Mass: " + string(obj_player_ship.mass));
        draw_text(32, 128, "MaxFwd: " + string(obj_player_ship.max_spd_fwd));
        draw_text(32, 140, "EN: " + string(obj_player_ship.energy_regen_points));
    }
    ***/
   

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Menu Panels
scr_gui_draw_panel(panel_pause);
scr_gui_draw_panel(panel_load_game);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="90">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Save game
exit; // Disabled for now
ini_open("motleysave.ini");
ini_write_real("location","current_sector_row",global.current_sector_row);
ini_write_real("location","current_sector_col",global.current_sector_col);
//ini_write_real("location","player_x",obj_player_ship.x);
//ini_write_real("location","player_y",obj_player_ship.y);
ini_close();
show_message("game saved");

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="85">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Load game
exit;// Disabled for now


if(!file_exists("save.ini")) exit;

ini_open("save.ini");
global.current_sector_row = ini_read_real("location","current_sector_row",global.galaxy_width/2);
global.current_sector_col = ini_read_real("location","current_sector_col",global.galaxy_width/2);
var px=ini_read_real("location","player_x",100);
var py=ini_read_real("location","player_y",100);
ini_close();
room_goto(rm_space);
with(obj_player_ship){
    x=px;
    y=py;
}
show_message("game loaded");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
