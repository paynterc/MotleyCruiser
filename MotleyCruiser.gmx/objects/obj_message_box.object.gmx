<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init
show = false;
clickable = false;
depth = -1000000;

raw_text="";
text = "";
font = fnt_menus;
font_size = font_get_size(font);
scroll = 0;
alltext = noone;
xhover = false;
yhover = false;

padding = 10;
margin = 10;
boxwidth = 640;
boxheight = 480;
tx=( display_get_gui_width() / 2 ) - (boxwidth/2);//top of rectangle
ty=( display_get_gui_height() / 2 ) - (boxheight/2);
script = noone;

scroll=0;
maxlines=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set clickable
clickable = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Scroll
var alength = array_length_1d(alltext);
if (keyboard_check_pressed(vk_anykey) == true)
{
    switch (keyboard_key)
    {
        case vk_down:
        scroll = min( scroll + 1, (alength - min(alength, maxlines) ) );
        break;
        case vk_up:
        scroll = max(scroll - 1, 0);
        break;
        
        case vk_space:
        alltext = scr_push_array(alltext,"MORE TEXT " + string(current_time));
        break;

    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Button select
var can_click = clickable &amp;&amp; (scr_gui_get_context()=="message");

if(can_click){
    if( gamepad_is_connected(global.pad) ){
    
        if( scr_user_input('menu_op_select') ){
            event_user(1);
        }
        
        if(  scr_user_input('menu_close') ){
            event_user(1);
        }
        
        
    }else{
    
        var bx = tx + (boxwidth/2)-75;
        var by = ty + boxheight - 75;    
        var guix = device_mouse_x_to_gui(0);
        var guiy = device_mouse_y_to_gui(0);
        
        xhover = ( guix == median(bx, guix, bx + 150) );
        yhover = ( guiy == median(by, guiy, by + 50) );
    
    }   
}else{
    xhover=false;
    yhover=false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Show/Hide

if(obj_game_control.panel_pause[4]){
    // if pause menu showing close this menu
    show = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check if button clicked
if(xhover &amp;&amp; yhover){
    event_user(1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Show message
event_user(0);
show = true;
scr_gui_set_context("message");
alarm[0]=room_speed;//Delay before button is clickable

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// User selects OK
show=false;
clickable = false;
scr_gui_return_context();
global.paused = false;
if(script!=noone){
    scr_script_parse(script);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update window text and settings
global.paused = true;

// Reset defaults
alltext=noone;
scroll = 0;
tx=( display_get_gui_width() / 2 ) - (boxwidth/2);//top of rectangle
ty=( display_get_gui_height() / 2 ) - (boxheight/2);
maxlength= boxwidth - (padding*2);
maxheight= boxheight - (padding*5);
maxlines = round(maxheight/(font_size + font_size/2)); 
xhover = false;
yhover = false;

// Divide text into an array of words.
word_array = scr_str_split(raw_text," ");
word_string = "";
// Look at each word, adding up its length. If we exceed the maxlength, start a new line
draw_set_font(font);

if(is_array(word_array)){
    for(var i=0; i&lt;array_length_1d(word_array); i++){
        var word = word_array[i];
        var s_width = string_width(word_string+word);
        if(s_width&gt;maxlength){
            alltext = scr_push_array(alltext,word_string);
            word_string="";
        }
        word_string = word_string + word + " ";
    }
}
alltext = scr_push_array(alltext,word_string);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(show){

    
    draw_panel(spr_background,0,tx,ty,boxwidth,boxheight,32);

    var offset = 0;
    draw_set_color(c_lime);
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
    draw_set_alpha(1);
    draw_set_font(font);
    
    /**
    maxlines  = 10;
    totallines = 12;
    maxindex = 11;
    scroll = 5;
    scroll + maxlines = 15;  
    **/
    
    for(var i = scroll; i&lt; min(scroll + maxlines, array_length_1d(alltext)); i++){

        text = alltext[i];
        text_width = string_width_ext(text,font_size+(font_size/2), maxlength);
        text_height = string_height_ext(text,font_size+(font_size/2), maxlength);
        draw_text_ext
        (
            tx + padding,
            ty + padding + offset,
            text,
            font_size + (font_size/2),
            maxlength
        );
        offset += text_height + padding;
    }
    
    // Button
    var bx = tx + (boxwidth/2)-75;
    var by = ty + boxheight - 75;    
    draw_panel(spr_background,0,bx,by,150,50,32);
    draw_set_halign(fa_center);
    draw_set_valign(fa_center);
    if(xhover &amp;&amp; yhover){
        draw_set_color(c_white);
    }else{
        draw_set_color(c_lime);
    }
    draw_text(bx+75,by+25,"CONTINUE");
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
