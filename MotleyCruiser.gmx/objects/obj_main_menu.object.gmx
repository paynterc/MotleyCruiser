<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init main menu panel
scr_main_menu();
scr_load_game_menu();//panel_load_game
panel_main_menu[4]  = true;//Show menu
loading = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check hover status on buttons
if(panel_load_game[4]){
    scr_gui_button_state(panel_load_game);
}else if(panel_main_menu[4]){
    scr_gui_button_state(panel_main_menu);    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check Button Press
if(panel_load_game[4]){
    
    var load_game_button = scr_gui_button_click(panel_load_game);
    if(load_game_button==0){
        scr_game_load("GAME1");  
    }
       
    if(load_game_button==1){
        scr_game_load("GAME2");
    }
    
    if(load_game_button==2){
        scr_game_load("GAME3");
    }
    
    // Back button
    if(load_game_button==3){
        scr_load_game_menu();//Reset    
        panel_load_game[4]=false;// Hide for good measure
    }
    
    if(load_game_button==4){
        scr_update_button(panel_load_game,4,BTN_SHOW,false);
        scr_update_button(panel_load_game,0,BTN_SHOW,false);
        // Confirm
        scr_update_button(panel_load_game,7,BTN_SHOW,true);
        scr_update_button(panel_load_game,8,BTN_SHOW,true);
        scr_update_button(panel_load_game,9,BTN_SHOW,true);
        
    }
    
    if(load_game_button==5){
        scr_update_button(panel_load_game,5,BTN_SHOW,false);
        scr_update_button(panel_load_game,1,BTN_SHOW,false);
        // Confirm
        scr_update_button(panel_load_game,10,BTN_SHOW,true);
        scr_update_button(panel_load_game,11,BTN_SHOW,true);
        scr_update_button(panel_load_game,12,BTN_SHOW,true);
        
    }
    
    if(load_game_button==6){
        scr_update_button(panel_load_game,6,BTN_SHOW,false);
        scr_update_button(panel_load_game,2,BTN_SHOW,false);
        // Confirm
        scr_update_button(panel_load_game,13,BTN_SHOW,true);
        scr_update_button(panel_load_game,14,BTN_SHOW,true);
        scr_update_button(panel_load_game,15,BTN_SHOW,true);

    }
    
    // Confirm delete
    if(load_game_button==8){
        // Delete game 1
        scr_game_delete("GAME1");
        scr_load_game_menu();//Reset menu
        panel_load_game[4]=true;// Show menu
    }
    
    if(load_game_button==11){
        // Delete game 2
        scr_game_delete("GAME2");
        scr_load_game_menu();//Reset menu
        panel_load_game[4]=true;// Show menu
    }
    
    if(load_game_button==14){
        // Delete game 3
        scr_game_delete("GAME3");
        scr_load_game_menu();//Reset menu
        panel_load_game[4]=true;// Show menu
    }
    
    
    // Cancel delete
    if(load_game_button==9 || load_game_button==12 || load_game_button==15){
        scr_load_game_menu();//Reset menu
        panel_load_game[4]=true;// Show menu
    }

    
    
    
}else if(panel_main_menu[4]){
    var main_menu_button = scr_gui_button_click(panel_main_menu);
    
    if(main_menu_button==0){
        scr_load_game_menu();//Reset menu
        panel_load_game[4]=true;
    }

    if(main_menu_button==1){
        //show_message("HELP BUTTON CLICKED");
    }
    
    if(main_menu_button==2){
        //show_message("SETTINGS BUTTON CLICKED");
    }
    
    if(main_menu_button==3){
        game_end();
    }
       
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the panel
scr_gui_draw_panel(panel_main_menu);
var pcenter = ( display_get_gui_width() / 2 ); //x
var pheight = panel_main_menu[1] + (panel_main_menu[3]/3); //y
draw_sprite(spr_main_title,0,pcenter,pheight);

scr_gui_draw_panel(panel_load_game);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
