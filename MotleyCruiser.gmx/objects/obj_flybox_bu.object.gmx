<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init
print = "";// text to be printed to the screen each frame. Will increase by one character at a time.
time = 0;// increment this by print speed setting
starttext = true;// Can be set to false to delay printing text.
depth = -100000;
destroy=false;

//popup
popspeed = room_speed;
desty=noone;

// box params
boxx1 = x;
boxy1 = y;

// portrait
portrait = noone;
pwidth = 0;
pheight = 0;

// options
options=noone;
option_target=noone;// The object to send the answer to
option_index=noone;// The index of the question answered. Object should have an array called fly_conditionals
options_triggered=false;// Ready to show options
showoptions=false;
option_selected = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move, Destroy
if(destroy){
    instance_destroy();
}

if(desty!=noone){
    var ydist = y - desty;
    if(abs(ydist)&lt;=popspeed){
        y = desty;
        starttext=true;
    }else{
        y -= popspeed;
    }
}


boxx1 = x;
boxy1 = y;
boxx2 = boxx1 + boxw;
boxy2 = boxy1+boxh;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Options
if(showoptions){
    showoptions=false;
    if(instance_exists(obj_flyoption)){
        with(obj_flyoption){
            destroy=true;
        }
    }
    if(options!=noone){
        var xx=boxx1;
        var yy=boxy2+ypadding;
        var op;
        for(var i=0;i&lt;array_length_1d(options);i++){
            op = instance_create(xx,yy,obj_flyoption);
            op.index = i+1;
            op.str = options[i];
            if(option_target==noone){
                op.option_target = self;
            }else{
                op.option_target = option_target;
            }
            op.option_index = option_index;
            xx += op.sprite_width + 8;
        }
    }
}

if(option_selected){
    option_selected=false;
    if(instance_exists(obj_flyoption)){
        with(obj_flyoption){
            destroy=true;
        }
    }   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Add letters over time
if( time &lt; text_length ){
    if(starttext){
        time += spd;
        print = string_copy(text,0,time);
    }
}else{
    if(!options_triggered){
        options_triggered=true;
        showoptions = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Render textbox &amp; text

draw_set_color(c_black);
draw_rectangle(boxx1,boxy1,boxx2,boxy2,false);
draw_set_color(c_white);
draw_line(boxx1,boxy1,boxx2,boxy1);
draw_line(boxx1,boxy2,boxx2,boxy2);

draw_line(boxx1,boxy1+3,boxx2,boxy1+3);
draw_line(boxx1,boxy2-3,boxx2,boxy2-3);

draw_set_color(c_dkgray);
draw_rectangle(boxx1,boxy1+4,boxx2,boxy2-4,false);


if(portrait){
    draw_set_color(c_black);
    draw_rectangle(boxx1+8, boxy1+8, boxx1+8+pwidth, boxy1+8+pheight, false);
    draw_set_color(c_lime);
    draw_rectangle(boxx1+8,boxy1+8,boxx1+8+pwidth,boxy1+8+pheight,true);
    
    swidth = sprite_get_width(portrait);
    scl = round( pwidth/swidth ) - 1;
    draw_sprite_part_ext(portrait, 0, 0, 0, swidth, swidth, boxx1+12, boxy1+12, scl, scl, c_white, 1);
}


draw_set_font(font);
draw_set_color(c_white);
draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_text_ext
(
    x + xpadding,
    y + ypadding,
    print,
    font_size + (font_size/2),
    maxlength
);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
