<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_team</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
type=1//player team
depth = -y;

// data indexes
global_index = noone;
crew_index = noone;
team_index = noone;

path = path_add();

//hunt, defend, hold
mode = "defend";
target = noone;



hp=20;
hp_current=hp;
ispeed=0.5;
pspeed=2;//path speed
pspeed_init = pspeed;
r_speed=.5;//reaction speed

image_speed = .5;


// Equip weapon
weapon = instance_create(x,y,obj_gun);
weapon.type = type;

sprite_default = spr_default;
sprite_index = sprite_default;
health_y = sprite_get_height(sprite_index) + 5;
hyset = false;

sublight = noone;

alarm[0] = room_speed;
alarm[1] = room_speed * r_speed;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cleanup
if(weapon != noone){
    weapon.shooting = false;
    weapon.destroy = true;
}

if(path_exists(path)) {
    path_delete(path);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update sublight
var crewMap = global.crew[crew_index];
if(crewMap[NPC_RACE_INDEX]==4){
    //sublight = glr_light_create(spr_androne_eyes,0,x,y,c_red,5);
    //glr_light_set_static(sublight,true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move, select target, shoot

// defend will find path to player while shooting at enemies
//"hold" holds position then falls back to core when player gets near
// hunt will find closest enemy and find a path to it while shooting
var stopPath = false;
var inview = false;//target in game view
if(instance_exists(obj_enemy)){
    
    if(target==noone || !instance_exists(target) || point_distance(x,y,target.x,target.y) &gt; 200){
        target = instance_nearest(x,y,obj_enemy);
    }

    var px = (target.x div CELL_WIDTH)* CELL_WIDTH + CELL_WIDTH/2;
    var py = (target.y div CELL_HEIGHT)* CELL_HEIGHT + CELL_HEIGHT/2;
    
    inview = scr_instance_in_view(target);

}else{
    target = noone;
    weapon.shooting = false;
    weapon.image_angle = direction;
}

if(instance_exists(obj_player) &amp;&amp; (mode=="defend" || mode=="fallback")){
    
        var cx = (obj_player.x div CELL_WIDTH)* CELL_WIDTH + CELL_WIDTH/2;
        var cy = (obj_player.y div CELL_HEIGHT)* CELL_HEIGHT + CELL_HEIGHT/2;
        // Get path to core
        scr_get_path_to_point(cx,cy,pspeed);



        if(point_distance(x,y,cx,cy) &lt; 50){
            //path_end();
            stopPath=true;  
        }
        
        if(target!=noone &amp;&amp; instance_exists(target)){
            if(mode=="hold" &amp;&amp; point_distance(x,y,px,py) &gt; 120){
                //path_end();
                stopPath=true;
            }
        
        
            if(inview &amp;&amp; weapon!=noone &amp;&amp; !scr_gridcol_line(weapon.x,weapon.y,target.x,target.y)){
                // Start shooting
                weapon.image_angle =  point_direction(x, y, px, py);
                weapon.shooting = true;

            }else{
                if(weapon != noone){
                    weapon.shooting = false;
                    weapon.image_angle = direction;
                }
            }
        
        }
        
        
}else if(mode == "hunt" &amp;&amp; target!=noone &amp;&amp; instance_exists(target)){
        // Get path to player
        scr_get_path_to_point(px,py,pspeed);
 
        if(inview &amp;&amp; weapon!=noone &amp;&amp; !scr_gridcol_line(weapon.x,weapon.y,target.x,target.y)){
            //path_end();
            stopPath=true;
            // Start shooting
            weapon.image_angle =  point_direction(x, y, px, py);
            weapon.shooting = true;

        
        }else{
            if(weapon != noone){
                weapon.shooting = false;
                weapon.image_angle = direction;
            }
        }

    
}else{

    if(weapon != noone){
        weapon.shooting = false;
    }
}



if(stopPath){
    path_end();
    image_speed = 0;
    image_index = 0;
}else{
    image_speed = ispeed;
}



alarm[0] = room_speed * r_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Bullet time
pspeed = pspeed_init * global.speed_mod;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check hp
depth = -y;

if(hp_current&lt;1){
    corpse = instance_create(x,y,obj_corpse);
    corpse.sprite = sprite_index;
    //update data so we know this npc is dead
    scr_global_update(global.crew,crew_index,NPC_ACTIVE,false);
    scr_global_update(global.npcs,global_index,NPC_ACTIVE,false);
    
    instance_destroy();
    
}



if(direction &gt;=180){
    image_xscale = -1;
}else{
    image_xscale = 1;
}
if(sublight!=noone){
    glr_light_set_scaling(sublight,image_xscale,image_yscale);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update weapon  position and angle
if(weapon != noone){
    weapon.x = x;
    weapon.y = y;
    weapon.depth=depth -1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update sprite
if(sprite_index != sprite_default &amp;&amp; !hyset){
    health_y = sprite_get_height(sprite_index) - 5;
    hyset = true;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="4" ename="obj_team">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move away from other crew
if(x == other.x &amp;&amp; y == other.y){
    scr_move(sign(other.id - id),0);
}

var dir = point_direction(other.x, other.y, x, y);
var hspd = lengthdir_x(.5,dir);
var vspd = lengthdir_y(.5,dir);
scr_move(hspd, vspd);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cleanup
if(path_exists(path)) {
    path_delete(path);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///sublight follows
if(sublight!=noone){
    glr_light_set_position(sublight,x,y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_healthbar(x-10,y-health_y,x+10,y-health_y, (hp_current/hp) * 100,c_black,c_red,c_green,0,false,false);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="99">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mode</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>"defend"</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="98">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mode</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>"hold"</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="97">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mode</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>"hunt"</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
