<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Food, water, fuel
/***
Reduce the supply of each on a timer. When a resource reaches zero, take a unit 
from cargo.

Use global varialbes
global.supply_food // 1 cargo food = 1 day food = 3 meals;
global.supply_water/ / 1 cargo water = 2 days water
global.supply_fuel
global.supply_oxygen

***/
day = 60;//seconds per day

time_food = 3;// ticks per day
time_water = 25;// ticks per day
time_fuel = 100;
time_oxygen = 50;

inc_food = 35;
inc_water = 1;
inc_fuel = 1;
inc_oxygen = 1;

cargo_food = 0;
cargo_oxygen = 0;
cargo_water = 0;
cargo_fuel = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Increment oxygen
if(room == rm_space){
    global.supply_oxygen -= inc_oxygen;
    scr_cargo_update_oxygen();
}

alarm[3]=room_speed *  (day / time_oxygen);//
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Increment fuel
if(room == rm_space &amp;&amp; !global.paused){
    
    if(instance_exists(obj_player_ship)){
        if(obj_player_ship.thrust_fwd){
                global.supply_fuel -= inc_fuel;
        }
        scr_cargo_update_fuel();
    }
    

}

alarm[2]=room_speed *  (day / time_fuel);//
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Increment water
if(!global.paused){
    if(room == rm_space){
        global.supply_water -= inc_water;
        scr_cargo_update_water();
    }
    
}
alarm[1]=room_speed *  (day / time_water);//
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Increment food
if(!global.paused){
    if(room == rm_space){
        global.supply_food -= inc_food;
        scr_cargo_update_food();
    }
    
}

alarm[0]=room_speed * (day / time_food);//food 3 times a day
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update cargo counts
cargo_food = scr_cargo_item_count(0);
cargo_oxygen = scr_cargo_item_count(1);
cargo_water = scr_cargo_item_count(3);
cargo_fuel = scr_cargo_item_count(4);

scr_cargo_update_food();
scr_cargo_update_water();
scr_cargo_update_fuel();
scr_cargo_update_oxygen();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Calc ship stats
/****
Calculate ship stats

Some ship stats (like mass or total bunks) need to be calculated because they do not exist in the ship
data array. For instance, ship data contains an array of all modules, but not the combined
mass of all modules. This object makes it easier to access these stats without actually
instantiating the ship.

****/

if(global.player_ship == noone) exit;
scr_ship_defaults();

ship_data =  global.player_ship;
scr_module_modify_stats();


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set supplies status
/***
Reduce the supply of each on a timer. When a resource reaches zero, take a unit 
from cargo.
Draw this out in obj_gui_control
***/

event_user(0);// Set cargo counts

if(room==rm_space){

    alarm[0]=room_speed * (day / time_food);//food 3 times a day
    alarm[1]=room_speed *  (day / time_water);//
    alarm[2]=room_speed *  (day / time_fuel);//
    alarm[3]=room_speed *  (day / time_oxygen);//
    
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
