<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Food, water, fuel
/***
Reduce the supply of each on a timer. When a resource reaches zero, take a unit 
from cargo.
***/
day = 60;//seconds per day

supply_food=100;// 1 cargo food = 1 day food = 3 meals;
supply_water=100;// 1 cargo water = 2 days water
supply_fuel=100;
supply_oxygen=100;

time_food = 3;// ticks per day
time_water = 25;// ticks per day
time_fuel = 100;
time_oxygen = 50;

inc_food = 35;
inc_water = 1;
inc_fuel = 1;
inc_oxygen = 1;

cargo_food = 0;
cargo_oxygen = 0;
cargo_water = 0;
cargo_fuel = 0;


alarm[0]=room_speed * (day / time_food);//food 3 times a day
alarm[1]=room_speed *  (day / time_water);//
alarm[2]=room_speed *  (day / time_fuel);//
alarm[3]=room_speed *  (day / time_oxygen);//
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room == rm_space){
    supply_oxygen -= inc_oxygen;

}
if(supply_oxygen&lt;1){
    supply_oxygen=0;
    if(cargo_oxygen&gt;0){
        scr_cargo_item_decrement(1,1);
        cargo_oxygen=scr_cargo_item_count(1);
        supply_oxygen = 100;
    }else{
        supply_oxygen=0;
    }
    
}
alarm[3]=room_speed *  (day / time_oxygen);//
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room == rm_space){
    
    if(instance_exists(obj_player_ship)){
        if(obj_player_ship.thrust_fwd){
                supply_fuel -= inc_fuel;
        }
    }


}
if(supply_fuel&lt;1){

    if(cargo_fuel&gt;0){
        scr_cargo_item_decrement(4,1);
        cargo_fuel=scr_cargo_item_count(4);
        supply_fuel = 100;
    }else{
        supply_fuel=0;
    }
    
}
alarm[2]=room_speed *  (day / time_fuel);//
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room == rm_space){
    supply_water -= inc_water;
}
if(supply_water&lt;1){
    if(cargo_water&gt;0){
        scr_cargo_item_decrement(3,1);
        cargo_water=scr_cargo_item_count(3);
        supply_water = 100;
    }else{
        supply_water=0;
    }
}
alarm[1]=room_speed *  (day / time_water);//
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room == rm_space){
    supply_food -= inc_food;
}

if(supply_food&lt;1){
    if(cargo_food&gt;0){
        scr_cargo_item_decrement(0,1);
        cargo_food=scr_cargo_item_count(0);
        supply_food = 100;
    }else{
        supply_food=0;
    }
}
alarm[0]=room_speed * (day / time_food);//food 3 times a day
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Calc ship stats
/****
Calculate ship stats

Some ship stats (like mass or total bunks) need to be calculated because they do not exist in the ship
data array. For instance, ship data contains an array of all modules, but not the combined
mass of all modules. This object makes it easier to access these stats without actually
instantiating the ship.

****/

if(global.player_ship == noone) exit;
scr_ship_defaults();

ship_data =  global.player_ship;
scr_module_modify_stats();


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set supplies status
/***
Reduce the supply of each on a timer. When a resource reaches zero, take a unit 
from cargo.
***/
day = 60;//seconds per day

supply_food=100;// 1 cargo food = 1 day food = 3 meals;
supply_water=100;// 1 cargo water = 2 days water
supply_fuel=100;
supply_oxygen=100;

time_food = 3;// ticks per day
time_water = 25;// ticks per day
time_fuel = 100;
time_oxygen = 50;

inc_food = 35;
inc_water = 1;
inc_fuel = 1;
inc_oxygen = 1;

cargo_food = 0;
cargo_oxygen = 0;
cargo_water = 0;
cargo_fuel = 0;


alarm[0]=room_speed * (day / time_food);//food 3 times a day
alarm[1]=room_speed *  (day / time_water);//
alarm[2]=room_speed *  (day / time_fuel);//
alarm[3]=room_speed *  (day / time_oxygen);//


cargo_food = scr_cargo_item_count(0);
cargo_oxygen = scr_cargo_item_count(1);
cargo_water = scr_cargo_item_count(3);
cargo_fuel = scr_cargo_item_count(4);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw supplies
if(room == rm_space){
    var x1=32;
    var y1=40;
    var rw = 1;
    draw_set_halign(fa_left);
    draw_set_valign(fa_bottom);
    var spacing = 40;
    
    draw_rectangle_color(x1, y1, x1+supply_food, y1+16, c_red, c_red, c_red, c_red, true);
    draw_set_color(c_red);
    draw_text(x1,y1,"FOOD: " + string(cargo_food));
    
    rw += 1;
    y1 = (spacing*rw);
    draw_rectangle_color(x1, y1, x1+supply_water, y1+16, c_aqua, c_aqua, c_aqua, c_aqua, true);
    draw_set_color(c_aqua);
    draw_text(x1,y1,"WATER: " + string(cargo_water));
    
    rw += 1;
    y1 = (spacing*rw);
    draw_rectangle_color(x1, y1, x1+supply_fuel, y1+16, c_orange, c_orange, c_orange, c_orange, true);
    draw_set_color(c_orange);
    draw_text(x1,y1,"FUEL: " + string(cargo_fuel));
    
    rw += 1;
    y1 = (spacing*rw);
    draw_rectangle_color(x1, y1, x1+supply_oxygen, y1+16, c_silver, c_silver, c_silver, c_silver, true);
    draw_set_color(c_silver);
    draw_text(x1,y1,"OXYGEN: " + string(cargo_oxygen));
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
