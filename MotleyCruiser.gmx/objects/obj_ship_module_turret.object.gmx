<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_gun_16_16_1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_ship_module</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
shooting = 0;

// Overwrite defaults
turn_spd = 7;
weapon_range = 800;

// Custom defaults
accuracy = .9;


//Animation speed is zero. Stay on one frame.
image_speed = 0;

target = noone;
tgt_dist = 0;
turretdata=noone;
gundata=noone;

facingMinusTarget = 100;
angleDiff = 100;

alarm[3] = room_speed * 1;//Update target
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update target
if(parent_obj!=noone ){
    target=parent_obj.target;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Call alarm again
alarm[3] = room_speed * 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Shoot a bullet


if(shooting == 1
&amp;&amp; parent_obj!=noone 
&amp;&amp; gundata != noone 
&amp;&amp; parent_obj.energy_current&gt;0
&amp;&amp; !global.paused){


    var d = sprite_get_width(sprite_index)/2;

    var rangle = abs(image_angle + (irandom(20)-40));

    
    bullet = instance_create(x + lengthdir_x(d, image_angle),y + lengthdir_y(d, image_angle),obj_laser);
    bullet.type=faction;
    bullet.sprite_index = gundata[GUN_BULLET_SPRITE];
    bullet.depth = -200;
    bullet.direction = point_direction(x,y,parent_obj.target.x,parent_obj.target.y)+random_range(-5,5);
    bullet.image_angle = rangle;
    bullet.speed = BULLET_BASE_SPEED;
    bullet.damage = gundata[GUN_DAMAGE];

    
    //audio_play_sound(snd_pulse1,1,false);
    
    parent_obj.energy_current -= 2;

    audio_play_sound_at(snd_laser3,x,y,0,100,100,1,false,2);


}

alarm[0] = room_speed * weapon_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Load turret data

if(m_proto!=noone &amp;&amp; turretdata==noone){

    if(m_proto[MODULE_TYPE_INDEX]!=noone &amp;&amp; m_proto[MODULE_TYPE_INDEX]&lt;array_length_1d(global.ship_turret_library)){
        turretdata = global.ship_turret_library[m_proto[MODULE_TYPE_INDEX]];
    }else{
        ship_turret_library = global.ship_turret_library[0];
    }
    
    turn_spd = turretdata[TURRET_TURN_SPEED];
    
}


if(gundata==noone &amp;&amp; turretdata!=noone){

    if (turretdata[TURRET_GUN_INDEX]!= noone &amp;&amp; turretdata[TURRET_GUN_INDEX]&lt;array_length_1d(global.guns)){
        gundata = global.guns[turretdata[TURRET_GUN_INDEX]];
    }else{
        gundata = global.guns[0];
    }    
    weapon_speed = gundata[GUN_SPEED];
    alarm[0]=room_speed * weapon_speed;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Turn and Move (in step)
if(global.paused){
    exit;
}

// Update target distance and rotate to target
if(target != noone &amp;&amp; instance_exists(target)){
    tgt_dist = distance_to_object(target);        
    angleDiff = scr_gradually_rotate_2(self.id,target,turn_spd,accuracy);
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set shooting status

if(instance_exists(target)
&amp;&amp; target != noone 
&amp;&amp; abs(angleDiff) &lt; 10 
&amp;&amp; !target.disabled
&amp;&amp; target.faction != faction
&amp;&amp; parent_obj.energy_current &gt; 0 
&amp;&amp; tgt_dist &lt;= weapon_range
&amp;&amp; !parent_obj.disabled){
    shooting = 1;
}else{
    shooting = 0;
};

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
