<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_human_fml</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_mortal</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Defaults
_state=1;// 1 active, 0 static (not playable)

tip=noone;
is_trader = false;
is_shipwright = false;
is_sentient = true;
crew_index = noone;// Set this if npc is in crew
sprite_default = spr_default;
sprite_index = sprite_default;

// Filled with npc_data
hp=10;
hp_current=hp;
pspeed=2;
pspeed_init = pspeed;
dspeed = pspeed;// dodge speed
ddir = 90;
dtimer = room_speed;
global_index = noone;
name = "Santos L. Halper";
race_index = 0;
hire_price = 25;
skincolor = c_white;
accessories = noone;
r_speed=.5;// Reaction speed. TODO: Add r_speed to NPC data. This will be the rate at which the npc updates targets and status.
faction=FACTION_NEUTRAL;// Update this manually at creation. TODO: Add faction to NPC data.

accessories = noone;// This will be set through scripting. Probaly data in npc_data 


// Location of health bar
health_y = sprite_get_height(sprite_index) + 5;
hyset = false;

// Equipment?
// Equip weapon in the step event, after npc_data is assigned.
weapon_index = noone;
weapon=noone;

// MODE: idle, hunt, defend, hold, follow
mode = "idle";
disposition = DISPOSITION_NEUTRAL;// hostile, neutral, helpful

// Mechanics
depth = -y;
path = path_add();
targetK = noone;// Target to shoot
targetM = noone;// Target to move to
targetKtype = obj_mortal;// Look for this object to shoot
targetKfaction = noone;// exmple: FACTION_PLAYER. Target kill faction. look for this faction within the targetKtype object.
targetMtype = noone;// Look for this kind of object to move to. obj_player or obj_core
pxK = noone;// Pathing x
pyK = noone;// Pathing y
pxM = noone;// Pathing x
pyM = noone;// Pathing y
bullet_width=1; // Use this to add to range. Useful for melee weapons with short range but big bullets.
ispeed = 0.5;// Animation speed
dDistance = 64;// Stop at this distance from the object I'm targeting.
dDistanceSave = dDistance;// We may change dDistance. Use this to hold the original value.
targetKinView =false;// Can I see my target on screen
custom_sprite=noone;// Set this so we can delete the sprite if needed
portrait_sprite=noone;// Used for dialog
showHealth = false;// Show healthbar
waypoints=noone;//array of waypoints
var wp1 = scr_array(x,y);
waypoints[0]=wp1;
wpIndex = 0;
sprite_set=false;//wait a sec before creating the sprite. doing it at create causes problems.

kb_dir = 0;
kb_spd = 0;// knockback speed

lng_dir = 0;
lng_spd = 0;// lunge speed


interact_active = true;// Will this do anything when the player approaches?
interact_ready = false;// switch to true when player gets close enough
minrange = 32;
interact_sprite = spr_interact_sm;
interact_text = "E";
display_side = "top";// Where to show the icon
xMod=0;yMod = -1;// Use to position icon
llight = noone; // For a light

default_weapon = obj_gun;

mission=noone;// A mission to offer
mission_id = noone;// An outstanding mission ID that the player has accepted.

// GO!!!
alarm[0] = room_speed * r_speed;
alarm[5] = room_speed * 3;// dodge direction
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Start idle movement
alarm[1]=room_speed * random_range(3,5);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Comment. Some text to show in a text balloon
comment=noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cleanup
if(weapon != noone){
    weapon.shooting = false;
    weapon.destroy = true;
}
if(path_exists(path)) {
    path_delete(path);
}
if(llight!=noone){
    glr_lightsimple_destroy(llight);
}
/***
// Doing this makes the sprite unavailable to the "corpse" object.
if(custom_sprite!=noone &amp;&amp; crew_index==noone){
    sprite_delete(custom_sprite);
}
***/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Change dodge direction
ddir = choose(90,-90,45,-45,0);
alarm[5] = room_speed * irandom_range(1,5);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Turn off Knockback

kb_dir = 0;
kb_spd = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cancel comment
comment=noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Idle movement part 2
if(mode=="idle" || mode=="discourse"){
    image_xscale = 1;
}
alarm[1]=room_speed * random_range(3,5);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Idle movement part 1
if(mode=="idle" || mode=="discourse"){
    image_xscale = -1;
}
alarm[2]=room_speed * random(2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// AI: Move, Target, Shoot

// For enemies
// "defend" continues all the way to core unless encounters player
// "hold" holds position then falls back to core when target gets near
// "hunt" finds closest player team member and moves to it

// For player team
// "defend "will find path to player while shooting at enemies
// "hold" holds position.
// "hunt" will find closest enemy and find a path to it while shooting

// Also: idle, patrol, retreat
targetKinView = false;

if(!global.paused){
    
    if(mode=="defend"){
    
        showHealth=true;
        
        scr_npc_find_kill_target();
        scr_npc_find_move_target();
        scr_npc_target_kill_in_view();
         
        // This should be the target to defend.    
        scr_npc_move_to_target();
        scr_npc_fire_at_target();   
              
    
    }else if(mode=="follow"){
    
        showHealth=false;
        scr_npc_find_move_target();
        scr_npc_move_to_target();
    
    }else if(mode=="hold"){
    
        showHealth=true;
        path_end();
        image_speed = 0;
        image_index = 0;
        
        scr_npc_find_kill_target();
        scr_npc_target_kill_in_view();       
        scr_npc_fire_at_target();

        
    }else if(mode=="hunt"){
    
        showHealth=true;
        scr_npc_find_kill_target();   
        if(targetK!=noone){
            targetM=targetK;
        }else{
            targetM=noone;
        }
        
        scr_npc_find_move_target();
        scr_npc_target_kill_in_view();
        scr_npc_move_to_target();
        scr_npc_fire_at_target();
        


                
    }else if(mode=="patrol"){
    
        dDistance = -1;// Allows object to move all the way to the target
        showHealth=true;
    
        var wp;
        
        if( is_array(waypoints) &amp;&amp; is_array(waypoints[wpIndex])){
            wp = waypoints[wpIndex];
            pxM = wp[0];
            pyM = wp[1];
        }
        
        if( point_distance(x,y,pxM,pyM) &lt; 16 ){
            wpIndex++;
            if( wpIndex&gt;=array_length_1d(waypoints) ){
                wpIndex = 0;
            }
            wp = waypoints[wpIndex];
            pxM = wp[0];
            pyM = wp[1];
        }
        
        scr_npc_move_to_target();
        

        var seenEnemy = scr_npc_sees_enemy(self,targetKtype);
        if(instance_exists(seenEnemy)){
            targetK = seenEnemy;
            dDistance = dDistanceSave;
            mode="hunt";
        }

        
    }else if(mode=="idle"){
        
        showHealth=false;
        path_end();
        image_speed = 0;
        //image_index = 0;

    }else if(mode=="retreat"){
        
        showHealth=true;
        scr_npc_find_move_target();
        scr_npc_move_to_target();
        
        if(instance_exists(weapon)){
            weapon.shooting=false;
        }
        
    }else if(mode=="discourse"){
    
        showHealth=false;
        path_end();
        image_speed = 0;
        image_index = 0;
        
    }else if(mode=="test_animation"){
    
        showHealth=false;
        path_end();
        image_speed = .25;
        
    }else{
        mode="idle";
    }
    

}
if(instance_exists(weapon)){
    if(weapon.shooting &amp;&amp; !weapon.reloading){
        pspeed = 0;
    }else{
        pspeed = pspeed_init;
    }
}

alarm[0] = room_speed * r_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Light
if(llight!=noone){
    glr_lightsimple_set_position(llight,x,y);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check HP
if(_state!=1){
    exit;
}
if(hp_current&lt;1){

    event_user(3);// Death action
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Depth and Facing
depth = -y;
if(mode!="idle" &amp;&amp; mode!="discourse"){
    if(direction &gt;=180){
        image_xscale = -1;
    }else{
        image_xscale = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Debug text
    draw_set_color(c_lime);
    
    if(global.paused){
        //draw_set_valign(fa_center);
        //draw_text(display_get_gui_width() / 2, 32, "-- PAUSED --");
    }

    

    /***
    draw_text(96, 64, "D WIDTH: " + string(display_get_width()));
    draw_text(96, 96, "D height: " + string(display_get_height()));
    
    draw_text(96, 128, "G WIDTH: " + string(display_get_gui_width()));
    draw_text(96, 160, "G height: " + string(display_get_gui_height()));
    
    draw_text(96, 192, "W WIDTH: " + string(window_get_width()));
    draw_text(96, 224, "W height: " + string(window_get_height()));
    
    draw_text(96, 256, "VP WIDTH: " + string(view_wport[0]));
    draw_text(96, 288, "VP height: " + string(view_hport[0]));
    
    draw_text(96, 352, "V WIDTH: " + string(view_wview[0]));
    draw_text(96, 384, "V height: " + string(view_hview[0]));
***/
    
    /***
    if(instance_exists(obj_planet_surface)){
            draw_text(48, 64, "Room index x: " + string(global.planet_room_index_x) );
            draw_text(48, 96, "Room index y: " + string(global.planet_room_index_y) );
            draw_text(48, 128, "planet seed: " + string(global.planet_seed) );
            draw_text(48, 160, "room seed: " + string(obj_planet_surface.seed) );
    }
    ***/
/****
    draw_text(48, 64, "D WIDTH: " + string(display_get_width()));
    draw_text(48, 96, "D height: " + string(display_get_height()));
    
    draw_text(48, 128, "G WIDTH: " + string(display_get_gui_width()));
    draw_text(48, 160, "G height: " + string(display_get_gui_height()));
    
    draw_text(48, 192, "W WIDTH: " + string(window_get_width()));
    draw_text(48, 224, "W height: " + string(window_get_height()));
    

    if(instance_exists(obj_player_ship)){
        draw_text(32, 64, "Decks: " + string(global.decks));
        draw_text(32, 64, "Current Deck: " + string(global.deck_current));
        draw_text(32, 96, "Mass: " + string(obj_player_ship.mass));
        draw_text(32, 128, "MaxFwd: " + string(obj_player_ship.max_spd_fwd));
        draw_text(32, 140, "EN: " + string(obj_player_ship.energy_regen_points));
    }
***/
   

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Weapon position
/*** updating this in the weapon now
if(instance_exists(weapon)){
    weapon.x = x;
    weapon.y = y;
    weapon.depth=depth -1;
}
***/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Step movement: Knockback, Lunge
if(kb_spd&gt;0 &amp;&amp; mode != "lunging"){
    // Knockback
    var kbX = lengthdir_x(kb_spd, kb_dir);
    var kbY = lengthdir_y(kb_spd, kb_dir);
            
    scr_move(kbX, kbY,1);// move using mp grid
    
}
if(lng_dir&gt;0){
    // Lunge
    var lngX = lengthdir_x(lng_spd, lng_dir);
    var lngY = lengthdir_y(lng_spd, lng_dir);
            
    scr_move(lngX, lngY,1);// move using mp grid
}

if(lng_dir==0){
    dtimer--;
    if(dtimer&lt;1 || faction==FACTION_PLAYER)
    {
        scr_npc_avoid();
    }
}
if (dtimer &lt; room_speed * -1){
 dtimer = room_speed;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update health bar position
if(sprite_index != sprite_default &amp;&amp; !hyset){
    health_y = sprite_get_height(sprite_index) - 5;
    hyset = true;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Pause
if(global.paused){
    path_end();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check player distance to show interact icon
if(mode == "discourse" &amp;&amp; instance_exists(obj_player)){
    interact_ready = ( point_distance(x,y,obj_player.x,obj_player.y) &lt;= minrange &amp;&amp; interact_active );
}else{
    interact_ready = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_damager">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Apply damage. Set mode.
if(other.type!=faction &amp;&amp; !other.cooling_down){

    instance_create(other.x,other.y,obj_impact);
    hp_current -= other.damage;
    
    if(crew_index==noone){
        // NPCs become hostile to player faction
        disposition = DISPOSITION_HOSTILE;       
        targetKtype = obj_mortal;
        targetK = other.firedby;
        if(mode!="retreat"){
            mode="hunt";
        }

        scr_ev_npc_hit(targetK,targetKtype);
    }
    
    if(!other.pierce_living){
        with(other){
            instance_destroy();
        }
    }else{
        with(other){
            event_user(0);// set bullet cooldown
        }
    }
    
    // Knockback
    if(other.kb_pwr &gt; 0 &amp;&amp; kb_spd==0){
        path_end();

        kb_dir = other.direction;
        kb_spd = other.kb_pwr;
        // Set an alarm to turn off knockback
        alarm[4] = room_speed * .15;  
    }
    
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_mortal">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move away from other
if(x == other.x &amp;&amp; y == other.y){
    scr_move(sign(other.id - id),0);
}

var dir = point_direction(other.x, other.y, x, y);
var hspd = lengthdir_x(.5,dir);
var vspd = lengthdir_y(.5,dir);
scr_move(hspd, vspd);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Death action
corpse = instance_create(x,y,obj_corpse);
corpse.sprite = sprite_index;

if(crew_index!=noone){
    //update data so we know this npc is dead 
    scr_ev_crew_died(crew_index);
}

//Set to dead in global index.
//scr_global_update(global.npcs,global_index,NPC_ACTIVE,false);

if(crew_index==noone){
    // NPCs will drop loot
    scr_drop_loot(1,3,'npc');
}

if(instance_exists(weapon)){
    with(weapon){
        parent_obj = noone;
        instance_destroy();// Remove the old weapon
    }
    weapon = noone;
}
audio_play_sound(snd_death_npc1,2,0);
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Equip weapon
if(weapon==noone &amp;&amp; npc_data!=noone){
    
    var equipment=noone;
    var weapon_id=noone;
    var weapon_index=noone;
    if(array_length_1d(npc_data)&gt;=NPC_EQUIPMENT){
        equipment = npc_data[NPC_EQUIPMENT];
        if(is_array(equipment)){
            weapon_id = equipment[EQUIP_WEAPON1];
            if(weapon_id!=noone){
                weapon_index = scr_inv_item_read(weapon_id,6);// Slot 6 holds the object name
            }
        }
    }
    
    if(weapon_index!=noone &amp;&amp; object_exists(weapon_index)){
        weapon = instance_create(x,y,weapon_index);         
    }else{
        weapon = instance_create(x,y,default_weapon);
    }
      
    weapon.type = faction;// The weapon will pass this along to the bullet.
    weapon.parent_obj = id;
    if(faction == FACTION_PLAYER){
        weapon.user_fire_rate_mod = BASE_PLAYER_MOD_FRATE;// Player guns fire faster, bullets go faster
        weapon.user_bullet_speed_mod = BASE_PLAYER_MOD_BSPEED;
        weapon.reload_speed = weapon.reload_speed/2;
    }

    
    if(faction!=FACTION_PLAYER){
        // Nerf the weapon for npc
        weapon.weaponSpeed = max(.5, weapon.weaponSpeed * 1.5); // slow down fire rate for enemies. lower the number, the faster
        //weapon.bullet_speed = max(round(weapon.bullet_speed/2),3);// Slow down bullets from enemy. higher the faster.
        bullet_width = sprite_get_width(weapon.bullet_sprite);
    }else{
        // Put my team on defense
        mode="defend";
    }

    
    
}else{
    if(instance_exists(weapon)){
        with(weapon){
            instance_destroy();// Remove the old weapon
        }
        weapon = noone;
    }
}

if(instance_exists(weapon)){
    weapon.x = x;
    weapon.y = y;
    weapon.depth=depth -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cleanup
if(path_exists(path)) {
    path_delete(path);
}
if(custom_sprite!=noone &amp;&amp; crew_index==noone){
    sprite_delete(custom_sprite);
}
if(portrait_sprite!=noone &amp;&amp; crew_index==noone){
    sprite_delete(portrait_sprite);
}
if(mission!=noone){
    var missionId = mission[? "id"];
    // If this mission was chosen, it will now have an ID. Leave it alone.
    if(is_undefined(missionId)){
        ds_map_destroy(mission);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// comment
var odds = 5;
if(irandom(odds)==odds){
    if(npc_data[NPC_NAME]=="Salty Dawg" &amp;&amp; room == rm_cantina2){
        
        comment = "Don't draw your gun in here. Makes people nervous.";
        alarm[3]=room_speed*2;// clear comment after 2 seconds
    
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw interact key icon
if(interact_ready){
    draw_sprite(interact_sprite,0,x +(sprite_height*xMod),y + (sprite_height*yMod));
    //draw_set_color(c_black);
    //draw_set_valign(fa_middle);
    //draw_set_halign(fa_center);
    //draw_set_font(fnt_menus_med);
    //draw_text(x +(sprite_height*xMod),y + ( (sprite_height+2) * yMod),interact_text);
}else{
    
    if(mission_id!=noone){
        draw_sprite(spr_npc_mission,0,x +(sprite_height*xMod),y + (sprite_height*yMod));
    }else if(mission!=noone){
        draw_sprite(spr_npc_mission,1,x +(sprite_height*xMod),y + (sprite_height*yMod));
    }


}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set sprite
if(!sprite_set){
    sprite_set = true;

    custom_sprite = scr_set_npc_sprite(npc_data);
    sprite_index = custom_sprite;
    npc_data[NPC_SPRITE_TEMP] = custom_sprite;
    portrait_sprite = scr_npc_make_portrait(custom_sprite);
    
    /// Make an icon
    if(is_trader){
        var merchantIcon = instance_create(x,y-sprite_height,obj_npc_icon);
        merchantIcon.sprite_index = spr_trade_icon;
        merchantIcon.myNpc = self;
        merchantIcon.yOffset = sprite_height * -1;
    }else if(is_shipwright){
        var merchantIcon = instance_create(x,y-sprite_height,obj_npc_icon);
        merchantIcon.sprite_index = spr_shipwright_icon;
        merchantIcon.myNpc = self;
        merchantIcon.yOffset = sprite_height * -1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw self, healthbar, shadow
if(_state!=1){
    exit;
}
// shadow
scr_npc_draw_shadow();

draw_self();
if(showHealth){
    //draw_healthbar(x-10,y-health_y,x+10,y-health_y, (hp_current/hp) * 100,c_black,c_red,c_green,0,false,false);
}

if(crew_index!=noone){
    draw_set_color(c_green);
    draw_set_font(fnt_menus_med);
    draw_set_alpha(1);
    draw_text(x,y-health_y,string(hp_current))
}



var modeClr=c_white;
if(mode=="defend"){
    modeClr=c_yellow;
}else if(mode=="hunt"){
    modeClr=c_red;
}else if(mode=="hold"){
    modeClr=c_blue;
}else if(mode=="patrol"){
    modeClr=c_lime;
}else if(mode=="retreat"){
    modeClr=c_orange;
}
//draw_circle_colour(x, y-28, 3, modeClr, modeClr, false);

//draw_rectangle_colour(bbox_left,bbox_top,bbox_right,bbox_bottom,c_red,c_red,c_red,c_red,true);




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw comment
if(comment!=noone){

    scr_draw_messagebox_plus(comment,id);

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="97">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// TODO: SET TEAM MODE
// Maybe do this in the player object instead.
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
