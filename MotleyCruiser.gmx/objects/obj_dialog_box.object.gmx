<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.display_scale = display_get_gui_width()/view_wview[view_current];

// Get the mouse position relative to the gui not the room
global.gui_mouse_x = (mouse_x - view_xview[view_current]) * global.display_scale;
global.gui_mouse_y = (mouse_y - view_yview[view_current]) * global.display_scale;

depth=-10000000;
show = false;
text = noone;
subject=noone;

gui_w = display_get_gui_width();
gui_h = display_get_gui_height();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update mouse gui position
//global.gui_mouse_x = (mouse_x - view_xview[view_current]) * global.display_scale;
//global.gui_mouse_y = (mouse_y - view_yview[view_current]) * global.display_scale;

global.gui_mouse_x = device_mouse_x_to_gui(0);
global.gui_mouse_y = device_mouse_y_to_gui(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Hide box if player moves
if(instance_exists(obj_player)){
    if(obj_player.hspd!=0 || obj_player.vspd!=0){
        show = false; 
        //obj_text.alpha = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(show){
    
    draw_rectangle_colour(gui_w - 610,gui_h - 280, gui_w, gui_h, c_red, c_yellow, c_red, c_yellow, false);
    draw_rectangle_colour(gui_w - 600,gui_h - 270, gui_w, gui_h, c_black, c_black, c_black, c_black, false);
    
    draw_sprite_general(sprite_index, 0, 0, 0, sprite_width, sprite_height, gui_w-25, gui_h-250, -13, 13, 0, c_white, c_white, c_black, c_black, 1);
    
    if(text != noone){
        draw_set_alpha(1);
        draw_set_halign(fa_left);
        draw_set_valign(fa_top);
        draw_text_color(gui_w - 590, gui_h - 260, text, c_white, c_white, c_white, c_white,1);
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// do nothing
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="84">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Open dialog box if player in range
var closest_sentient = noone;
var this_sentient = noone;
var closest_range = 0;
var this_range = 0;
for(var i = 0; i &lt; instance_number(obj_sentient); i++) {
    this_sentient = instance_find(obj_sentient,i);
    this_range = point_distance(obj_player.x,obj_player.y,this_sentient.x,this_sentient.y);
    if(this_range&lt;50){
        if(closest_sentient==noone){
            closest_sentient = this_sentient;
            closest_range = this_range;
        }else if(this_range&lt;closest_range){
            closest_sentient = this_sentient;
            closest_range = this_range;
        }
    }
}

if(closest_sentient != noone){
    //instance_activate_object(obj_portrait);
    sprite_index = closest_sentient.sprite_index;
    text = closest_sentient.mission[? "text"];
    show = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
