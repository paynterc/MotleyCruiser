<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cryptolid</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>obj_team</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
type = 1//player team
facing = 0;
hp = 10;
hp_current = hp;
ispeed = .25;// Image speed
image_speed = ispeed;
spd = 3;
spd_save = spd;//hold max speed here
hspd=0;
vspd=0;
health_y = sprite_get_height(sprite_index) - 5;
set_vibe = 0;
shake=false;
can_move=true;
weapon_index = obj_melee_weapon;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Equip weapon
weapon = instance_create(x,y,weapon_index);
weapon.type = type;
weapon.parent_obj = id;
weapon.weaponSpeed = .15;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Fire weapon and move
if(weapon != noone){
    weapon.shooting = scr_user_input("fire");
}

// Adjust run speed
if(weapon.shooting){
    spd = 1;
}else{
    spd = spd_save;
}

// Get input and move
if( gamepad_is_connected(0) ){
    hspd = gamepad_axis_value(0, gp_axislh) * spd;
    vspd = gamepad_axis_value(0, gp_axislv) * spd;
}else{
    hspd = (keyboard_check(vk_right) - keyboard_check(vk_left)) * spd;
    vspd = (keyboard_check(vk_down) - keyboard_check(vk_up)) * spd;
}


// Move
scr_move(hspd, vspd);

//set the depth so it can overlap wall tiles
depth=-y;

if( (hspd&gt;0 &amp;&amp; image_xscale&lt;0) || (hspd&lt;0 &amp;&amp; image_xscale&gt;0) ){

    image_xscale *= -1;

}

if(hspd==0 &amp;&amp; vspd==0){
    image_speed = 0;
    image_index = 0;
}else{
    image_speed=ispeed;
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update weapon  position and angle
if(weapon != noone){
    weapon.x = x;
    weapon.y = y;
    weapon.depth=depth -1;
    
    var pdir = scr_user_input("point_dir");
    weapon.image_angle = pdir;
    
    // Slower rotate
    //var dif = angle_difference(pdir, weapon.image_angle);
    //weapon.image_angle += median(-20, dif, 20);
        
    // Grenade
    if(scr_user_input("fire_alt")){
        if(scr_inv_item_count(53)&gt;0){
            scr_inv_item_decrement(53);
            var grenade = instance_create(x,y,obj_grenade);
            grenade.depth = -200;
            grenade.direction = weapon.image_angle;
            grenade.speed = 4;
        }
    }
    
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Audio listener
audio_listener_position(x, y, 500);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Monitor hp
if(obj_player.hp_current&lt;1){
    scr_player_died_in_room();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Bug out
if(scr_user_input("bugout")){
    room_goto(rm_space);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_damager">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set health
if(other.type==2){
    obj_room_level.shake=true;
    scr_screen_shake();
    gamepad_set_vibration(0, 1, 1);//this will be cancelled in obj_room_level
    var impact = instance_create(other.x,other.y,obj_impact);
    impact.image_blend = c_red;
    hp_current -= other.damage;
    with(other){
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
