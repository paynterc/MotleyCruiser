<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_rpg_town</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

inst = instance_create(512,140,o_button);
inst.button_number = 1;
inst.image_index = 0;

inst = instance_create(512-220,140,o_button);
inst.button_number = 2;
inst.image_index = 2;

inst = instance_create(512+220,140,o_button);
inst.button_number = 3;
inst.image_index = 4;

button_str = "";
button_alpha = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_set_font(f_normal);
draw_sprite(s_button_back,0,512,50);
if mouse_check_button_pressed(mb_left) || mouse_check_button_pressed(mb_right) {effect_create_above(ef_ring,mouse_x,mouse_y,0,c_lime);}

draw_set_color(c_white);
draw_set_halign(fa_left);
draw_text_color(15,15,button_str,c_white,c_white,c_white,c_white,button_alpha);
if button_alpha &gt; 0 {button_alpha -= 0.025;}

if mouse_check_button_pressed(mb_right) {button_str = "mb_right"; button_alpha = 1;}
if mouse_check_button_pressed(mb_left) {button_str = "mb_left"; button_alpha = 1;}
if keyboard_check_pressed(vk_space) {button_str = "vk_space"; button_alpha = 1;}

draw_set_halign(fa_left);
var gold_string = string(o_example_text.count)+string(" Gold");
draw_text_color(15,40,gold_string,c_yellow,c_yellow,c_yellow,c_yellow,1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
